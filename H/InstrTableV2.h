#pragma once

#include "codegenv2.h"

struct Instr_Def InstrTableV2[] = {

	/* | mnemonic | operand count | operand types | encoding group | flags | opcode len | opcode bytes | op size | modRM | sib | OSO | ASO | Valid segment modes | opnd direction | mandatory prefix type | immediate Operand? | memory Operand? | CPU mode | */

	/* No operand gp instructions */
    { "aaa",    0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0x37, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
    { "aad",    0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd5, 0x0a, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
    { "aad",    1, { IMM8,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0xd5, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32), NO_DST, NO_PREFIX, IMM_OPND_0, NO_MEM, P_86, 0, NULL },
    { "aam",    0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd4, 0x0a, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
    { "aam",    1, { IMM8,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0xd4, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32), NO_DST, NO_PREFIX, IMM_OPND_0, NO_MEM, P_86, 0, NULL },
	{ "aas",    0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0x3f, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "clc",    0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0xf8, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "cld",    0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0xfc, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "cli",    0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0xfa, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "clts",   0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x06, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "cmc",    0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0xf5, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "cpuid",  0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0xa2, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "daa",    0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0x27, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "das",    0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0x2f, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "hlt",    0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0xf4, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "invd",   0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x08, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "lahf",   0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0x9f, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "leave",  0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0xc9, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "stc",    0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0xf9, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "std",    0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0xfd, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "sti",    0, { OP_N,     OP_N    }, GP1, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 1, { 0xfb, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },

	/* FPU no operand instructions */
	{ "f2xm1",  0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xf0, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fabs",   0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xe1, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fchs",   0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xe0, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fclex",  0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 3, { 0x9b, 0xdb, 0xe2 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fnclex", 0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xdb, 0xe2, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fcos",   0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xff, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fdecstp",0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xf6, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fincstp",0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xf7, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "finit",  0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 3, { 0x9b, 0xdb, 0xe3 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fninit", 0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xdb, 0xe3, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fld1",   0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xe8, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fldl2t", 0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xe9, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fldl2e", 0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xea, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fldpi",  0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xeb, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fldlg2", 0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xec, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fldln2", 0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xed, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fldz",   0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xee, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fnop",   0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xd0, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fpatan", 0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xf3, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fprem",  0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xf8, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fprem1", 0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xf5, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fptan",  0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xf2, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "frndint",0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xfc, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fscale", 0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xfd, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fsin",   0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xfe, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fsincos",0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xfb, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fsqrt",  0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xfa, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "ftst",   0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xe4, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fxam",   0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xe5, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fxch",   0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xc9, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fxtract",0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xf4, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fyl2x",  0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xf1, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },
	{ "fyl2xp1",0, { OP_N,     OP_N    }, FP0, (NO_FLAGS),														  NO_VEX, NO_EVEX, 1, 2, { 0xd9, 0xf9, 0x00 }, 1, 0, NO_MOD,      0, 0,                0,                  (X16 | X32 | X64), NO_DST, NO_PREFIX, NO_IMM, NO_MEM, P_86, 0, NULL },

    //14 ib ADC AL, imm8 I Valid Valid Add with carry imm8 to AL.
    { "adc",    2, { R8_AL,    IMM8    }, GP0, (F_OPCODE_REG),												          NO_VEX, NO_EVEX, 1, 1, { 0x14, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				         0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
 
    //15 iw ADC AX, imm16 I Valid Valid Add with carry imm16 to AX.
    //15 id ADC EAX, imm32 I Valid Valid Add with carry imm32 to EAX.
    //REX.W + 15 id ADC RAX, imm32 I Valid N.E.Add with carry imm32 sign extended to 64 - bits to RAX.
    { "adc",    2, { R16_AX,   IMM16   }, GP0, (F_OPCODE_REG),												          NO_VEX, NO_EVEX, 1, 1, { 0x15, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "adc",    2, { R32_EAX,  IMM32   }, GP0, (F_OPCODE_REG),												          NO_VEX, NO_EVEX, 1, 1, { 0x15, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "adc",    2, { R64_RAX,  IMM32   }, GP3, REX | (F_OPCODE_REG),						                NO_VEX, NO_EVEX, 1, 1, { 0x15, 0x00, 0x00 }, 8, 0, NO_MOD,      0, 0,				         0,                  (X64), NO_DST,              NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },

    //80 / 2 ib ADC r / m8, imm8 MI Valid Valid Add with carry imm8 to r / m8.
    //REX + 80 / 2 ib ADC r / m8 * , imm8 MI Valid N.E.Add with carry imm8 to r / m8.
    { "adc",    2, { R8,       IMM8    }, GP3, REX | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		    NO_VEX, NO_EVEX, 1, 1, { 0x80, 0x02, 0x00 }, 1, 0, MOD_REG_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "adc",    2, { R8H,      IMM8    }, GP3, REX | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		    NO_VEX, NO_EVEX, 1, 1, { 0x80, 0x02, 0x00 }, 1, 0, MOD_REG_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "adc",    2, { M8,       IMM8    }, GP0, REX | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		    NO_VEX, NO_EVEX, 1, 1, { 0x80, 0x02, 0x00 }, 1, 0, MOD_MEM_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },

    //81 / 2 iw ADC r / m16, imm16 MI Valid Valid Add with carry imm16 to r / m16.
    //81 / 2 id ADC r / m32, imm32 MI Valid Valid Add with CF imm32 to r / m32.
    //REX.W + 81 / 2 id ADC r / m64, imm32 MI Valid N.E.Add with CF imm32 sign extended to 64 - bits to r / m64.
    { "adc",    2, { R16,      IMM16   }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT),		          NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x02, 0x00 }, 2, 0, MOD_REG_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "adc",    2, { M16,      IMM16   }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT),		          NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x02, 0x00 }, 2, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },
    { "adc",    2, { R32,      IMM32   }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT),		          NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x02, 0x00 }, 4, 0, MOD_REG_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "adc",    2, { M32,      IMM32   }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT),		          NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x02, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },
    { "adc",    2, { R64,      IMM32   }, GP3, REXW | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		  NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x02, 0x00 }, 8, 0, MOD_REG_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { M64,      IMM32   }, GP3, REXW | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		  NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x02, 0x00 }, 8, 0, MOD_MEM_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_64,  0, NULL },

    //83 / 2 ib ADC r / m16, imm8 MI Valid Valid Add with CF sign - extended imm8 to r / m16.
    //83 / 2 ib ADC r / m32, imm8 MI Valid Valid Add with CF sign - extended imm8 into r / m32.
    //REX.W + 83 / 2 ib ADC r / m64, imm8 MI Valid N.E.Add with CF sign - extended imm8 into r / m64.
    { "adc",    2, { R16,      IMM8    }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT | IMM8_ONLY),	NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x02, 0x00 }, 2, 0, MOD_REG_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "adc",    2, { M16,      IMM8    }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT | IMM8_ONLY),	NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x02, 0x00 }, 2, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },
    { "adc",    2, { R32,      IMM8    }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT | IMM8_ONLY),	NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x02, 0x00 }, 4, 0, MOD_REG_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "adc",    2, { M32,      IMM8    }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT | IMM8_ONLY),	NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x02, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },
    { "adc",    2, { R64,      IMM8    }, GP3, REXW | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		  NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x02, 0x00 }, 8, 0, MOD_REG_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { M64,      IMM8    }, GP3, REXW | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		  NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x02, 0x00 }, 8, 0, MOD_MEM_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_64,  0, NULL },

    //10 / r ADC r / m8, r8 MR Valid Valid Add with carry byte register to r / m8.
    //REX + 10 / r ADC r / m8 * , r8* MR Valid N.E.Add with carry byte register to r / m64.
    { "adc",    2, { R8,       R8      }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM | OPCODE_EXT | IMM8_ONLY),     NO_VEX, NO_EVEX, 1, 1, { 0x10, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "adc",    2, { R8,       R8H     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM | OPCODE_EXT | IMM8_ONLY),		  NO_VEX, NO_EVEX, 1, 1, { 0x10, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "adc",    2, { R8H,      R8      }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM | OPCODE_EXT | IMM8_ONLY),		  NO_VEX, NO_EVEX, 1, 1, { 0x10, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "adc",    2, { R8H,      R8H     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM | OPCODE_EXT | IMM8_ONLY),		  NO_VEX, NO_EVEX, 1, 1, { 0x10, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "adc",    2, { R8E,      R8E     }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	      NO_VEX, NO_EVEX, 1, 1, { 0x10, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64),             RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { R8,       R8E     }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x10, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64),             RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { R8E,      R8      }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x10, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64),             RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { R8U,      R8      }, GP3, (REX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),					            NO_VEX, NO_EVEX, 1, 1, { 0x10, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64),             RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { M_ANY,    R8      }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                        NO_VEX, NO_EVEX, 1, 1, { 0x10, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
    { "adc",    2, { M_ANY,    R8H     }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                        NO_VEX, NO_EVEX, 1, 1, { 0x10, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
    { "adc",    2, { M_ANY,    R8E     }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	              NO_VEX, NO_EVEX, 1, 1, { 0x10, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
    { "adc",    2, { M_ANY,    R8U     }, GP3, ALLOW_SEG | (REX) | (F_MODRM | F_MODRM_REG),						            NO_VEX, NO_EVEX, 1, 1, { 0x10, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },

    //11 / r ADC r / m16, r16 MR Valid Valid Add with carry r16 to r / m16.
    //11 / r ADC r / m32, r32 MR Valid Valid Add with CF r32 to r / m32.
    //REX.W + 11 / r ADC r / m64, r64 MR Valid N.E.Add with CF r64 to r / m64.
    { "adc",    2, { R16,      R16     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							                NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "adc",    2, { R16E,     R16E    }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),        NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { R16E,     R16     }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { R16,      R16E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { R32,      R32     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							                NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "adc",    2, { R32E,     R32E    }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	      NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { R32E,     R32     }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { R32,      R32E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { R64,      R64     }, GP3, (REX | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		            NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { R64E,     R64E    }, GP3, (REX | REXR | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM), NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { R64,      R64E    }, GP3, (REX | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		    NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { R64E,     R64     }, GP3, (REX | REXR | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		    NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adc",    2, { M_ANY,    R16     }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                        NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 2, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
    { "adc",    2, { M_ANY,    R16E    }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	              NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 2, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
    { "adc",    2, { M_ANY,    R32     }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                        NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 4, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
    { "adc",    2, { M_ANY,    R32E    }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	              NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 4, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
    { "adc",    2, { M_ANY,    R64     }, GP0, ALLOW_SEG | (REX | REXW) | (F_MODRM | F_MODRM_REG),			          NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 8, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
    { "adc",    2, { M_ANY,    R64E    }, GP3, ALLOW_SEG | (REX | REXW | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x11, 0x00, 0x00 }, 8, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },

    //12 / r ADC r8, r / m8 RM Valid Valid Add with carry r / m8 to byte register.
    //REX + 12 / r ADC r8*, r / m8 * RM Valid N.E.Add with carry r / m64 to byte register.
    { "adc",    2, { R8,       M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x12, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
    { "adc",    2, { R8H,      M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x12, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
    { "adc",    2, { R8E,      M_ANY   }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x12, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "adc",    2, { R8U,      M_ANY   }, GP3, ALLOW_SEG | (REX) | (F_MODRM | F_MODRM_REG),						      NO_VEX, NO_EVEX, 1, 1, { 0x12, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },

    //13 / r ADC r16, r / m16 RM Valid Valid Add with carry r / m16 to r16.
    //13 / r ADC r32, r / m32 RM Valid Valid Add with CF r / m32 to r32.
    //REX.W + 13 / r ADC r64, r / m64 RM Valid N.E.Add with CF r / m64 to r64.
    { "adc",    2, { R16,      M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x13, 0x00, 0x00 }, 2, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
    { "adc",    2, { R16E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x13, 0x00, 0x00 }, 2, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "adc",    2, { R32,      M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x13, 0x00, 0x00 }, 4, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
    { "adc",    2, { R32E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x13, 0x00, 0x00 }, 4, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "adc",    2, { R64,      M_ANY   }, GP0, ALLOW_SEG | (REX | REXW) | (F_MODRM | F_MODRM_REG),				  NO_VEX, NO_EVEX, 1, 1, { 0x13, 0x00, 0x00 }, 8, 0, MOD_REG_MEM, 0, 0,				          ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "adc",    2, { R64E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXW | REXR) | (F_MODRM | F_MODRM_REG),	  NO_VEX, NO_EVEX, 1, 1, { 0x13, 0x00, 0x00 }, 8, 0, MOD_REG_MEM, 0, 0,				          ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    
    //66 0F 38 F6 / r ADCX r32, r/m32 RM V / V ADX Unsigned addition of r32 with CF, r / m32 to r32, writes CF.
    //66 REX.w 0F38 F6 / r ADCX r64, r/m64 RM V / NE ADX Unsigned addition of r64 with CF, r / m64 to r64, writes CF.
    { "adcx",    2, { R32,      R32     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							                  NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,            (X32 | X64), REG_DST,  PFX_0x66F38, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "adcx",    2, { R32E,     R32E    }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	        NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,            (X32 | X64), REG_DST,  PFX_0x66F38, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adcx",    2, { R32E,     R32     }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,            (X32 | X64), REG_DST,  PFX_0x66F38, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adcx",    2, { R32,      R32E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,            (X32 | X64), REG_DST,  PFX_0x66F38, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adcx",    2, { R64,      R64     }, GP3, (REX | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		            NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), REG_DST,  PFX_0x66F38, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adcx",    2, { R64E,     R64E    }, GP3, (REX | REXR | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),  NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), REG_DST,  PFX_0x66F38, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adcx",    2, { R64,      R64E    }, GP3, (REX | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		      NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), REG_DST,  PFX_0x66F38, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adcx",    2, { R64E,     R64     }, GP3, (REX | REXR | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		      NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), REG_DST,  PFX_0x66F38, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adcx",    2, { R32,      M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                        NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 4, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE,       (X32 | X64), REG_DST, PFX_0x66F38, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
    { "adcx",    2, { R32E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	                NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 4, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE,       (X32 | X64), REG_DST, PFX_0x66F38, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "adcx",    2, { R64,      M_ANY   }, GP0, ALLOW_SEG | (REX | REXW) | (F_MODRM | F_MODRM_REG),				          NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 8, 0, MOD_REG_MEM, 0, 0,				          ADDR_SIZE_OVERRIDE,       (X64), REG_DST, PFX_0x66F38, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "adcx",    2, { R64E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXW | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 8, 0, MOD_REG_MEM, 0, 0,				          ADDR_SIZE_OVERRIDE,       (X64), REG_DST, PFX_0x66F38, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },

    //04 ib ADD AL, imm8 I Valid Valid Add imm8 to AL.
    { "add",    2, { R8_AL,    IMM8    }, GP0, (F_OPCODE_REG),												          NO_VEX, NO_EVEX, 1, 1, { 0x04, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				         0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },

    //05 iw ADD AX, imm16 I Valid Valid Add imm16 to AX.
    //05 id ADD EAX, imm32 I Valid Valid Add imm32 to EAX.
    //REX.W + 05 id ADD RAX, imm32 I Valid N.E.Add imm32 sign - extended to 64 - bits to RAX.
    { "add",    2, { R16_AX,   IMM16   }, GP0, (F_OPCODE_REG),												          NO_VEX, NO_EVEX, 1, 1, { 0x05, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "add",    2, { R32_EAX,  IMM32   }, GP0, (F_OPCODE_REG),												          NO_VEX, NO_EVEX, 1, 1, { 0x05, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "add",    2, { R64_RAX,  IMM32   }, GP3, REX | (F_OPCODE_REG),						                NO_VEX, NO_EVEX, 1, 1, { 0x05, 0x00, 0x00 }, 8, 0, NO_MOD,      0, 0,				         0,                  (X64), NO_DST,              NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },

    //80 / 0 ib ADD r / m8, imm8 MI Valid Valid Add imm8 to r / m8.
    //REX + 80 / 0 ib ADD r / m8 * , imm8 MI Valid N.E.Add sign - extended imm8 to r / m8.
    { "add",    2, { R8,       IMM8    }, GP3, REX | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		    NO_VEX, NO_EVEX, 1, 1, { 0x80, 0x00, 0x00 }, 1, 0, MOD_REG_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "add",    2, { R8H,      IMM8    }, GP3, REX | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		    NO_VEX, NO_EVEX, 1, 1, { 0x80, 0x00, 0x00 }, 1, 0, MOD_REG_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "add",    2, { M8,       IMM8    }, GP0, REX | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		    NO_VEX, NO_EVEX, 1, 1, { 0x80, 0x00, 0x00 }, 1, 0, MOD_MEM_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },

    //81 / 0 iw ADD r / m16, imm16 MI Valid Valid Add imm16 to r / m16.
    //81 / 0 id ADD r / m32, imm32 MI Valid Valid Add imm32 to r / m32.
    //REX.W + 81 / 0 id ADD r / m64, imm32 MI Valid N.E.Add imm32 sign - extended to 64 - bits to r / m64.
    { "add",    2, { R16,      IMM16   }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT),		          NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x00, 0x00 }, 2, 0, MOD_REG_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "add",    2, { M16,      IMM16   }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT),		          NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x00, 0x00 }, 2, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },
    { "add",    2, { R32,      IMM32   }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT),		          NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x00, 0x00 }, 4, 0, MOD_REG_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "add",    2, { M32,      IMM32   }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT),		          NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x00, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },
    { "add",    2, { R64,      IMM32   }, GP3, REXW | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		  NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x00, 0x00 }, 8, 0, MOD_REG_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
    { "add",    2, { M64,      IMM32   }, GP3, REXW | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		  NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x00, 0x00 }, 8, 0, MOD_MEM_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_64,  0, NULL },

    //83 / 0 ib ADD r / m16, imm8 MI Valid Valid Add sign - extended imm8 to r / m16.
    //83 / 0 ib ADD r / m32, imm8 MI Valid Valid Add sign - extended imm8 to r / m32.
    //REX.W + 83 / 0 ib ADD r / m64, imm8 MI Valid N.E.Add sign - extended imm8 to r / m64.
    { "add",    2, { R16,      IMM8    }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT | IMM8_ONLY),	NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x00, 0x00 }, 2, 0, MOD_REG_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "add",    2, { M16,      IMM8    }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT | IMM8_ONLY),	NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x00, 0x00 }, 2, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },
    { "add",    2, { R32,      IMM8    }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT | IMM8_ONLY),	NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x00, 0x00 }, 4, 0, MOD_REG_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "add",    2, { M32,      IMM8    }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT | IMM8_ONLY),	NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x00, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },
    { "add",    2, { R64,      IMM8    }, GP3, REXW | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		  NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x00, 0x00 }, 8, 0, MOD_REG_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
    { "add",    2, { M64,      IMM8    }, GP3, REXW | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		  NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x00, 0x00 }, 8, 0, MOD_MEM_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_64,  0, NULL },

    //00 / r ADD r / m8, r8 MR Valid Valid Add r8 to r / m8.
    //REX + 00 / r ADD r / m8 * , r8* MR Valid N.E.Add r8 to r / m8.
    { "add",    2, { R8,       R8      }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM | OPCODE_EXT | IMM8_ONLY),     NO_VEX, NO_EVEX, 1, 1, { 0x00, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "add",    2, { R8,       R8H     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM | OPCODE_EXT | IMM8_ONLY),		  NO_VEX, NO_EVEX, 1, 1, { 0x00, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "add",    2, { R8H,      R8      }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM | OPCODE_EXT | IMM8_ONLY),		  NO_VEX, NO_EVEX, 1, 1, { 0x00, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "add",    2, { R8H,      R8H     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM | OPCODE_EXT | IMM8_ONLY),		  NO_VEX, NO_EVEX, 1, 1, { 0x00, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "add",    2, { R8E,      R8E     }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	      NO_VEX, NO_EVEX, 1, 1, { 0x00, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64),             RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "add",    2, { R8,       R8E     }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x00, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64),             RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "add",    2, { R8E,      R8      }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x00, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64),             RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "add",    2, { R8U,      R8      }, GP3, (REX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),					            NO_VEX, NO_EVEX, 1, 1, { 0x00, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64),             RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "add",    2, { M_ANY,    R8      }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                        NO_VEX, NO_EVEX, 1, 1, { 0x00, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
    { "add",    2, { M_ANY,    R8H     }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                        NO_VEX, NO_EVEX, 1, 1, { 0x00, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
    { "add",    2, { M_ANY,    R8E     }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	              NO_VEX, NO_EVEX, 1, 1, { 0x00, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
    { "add",    2, { M_ANY,    R8U     }, GP3, ALLOW_SEG | (REX) | (F_MODRM | F_MODRM_REG),						            NO_VEX, NO_EVEX, 1, 1, { 0x00, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },

    //01 / r ADD r / m16, r16 MR Valid Valid Add r16 to r / m16.
    //01 / r ADD r / m32, r32 MR Valid Valid Add r32 to r / m32.
    //REX.W + 01 / r ADD r / m64, r64 MR Valid N.E.Add r64 to r / m64.
    { "add",    2, { R16,      R16     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							                NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "add",    2, { R16E,     R16E    }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),        NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "add",    2, { R16E,     R16     }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "add",    2, { R16,      R16E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "add",    2, { R32,      R32     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							                NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "add",    2, { R32E,     R32E    }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	      NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "add",    2, { R32E,     R32     }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "add",    2, { R32,      R32E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "add",    2, { R64,      R64     }, GP3, (REX | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		            NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "add",    2, { R64E,     R64E    }, GP3, (REX | REXR | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM), NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "add",    2, { R64,      R64E    }, GP3, (REX | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		    NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "add",    2, { R64E,     R64     }, GP3, (REX | REXR | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		    NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "add",    2, { M_ANY,    R16     }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                        NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 2, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
    { "add",    2, { M_ANY,    R16E    }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	              NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 2, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
    { "add",    2, { M_ANY,    R32     }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                        NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 4, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
    { "add",    2, { M_ANY,    R32E    }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	              NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 4, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
    { "add",    2, { M_ANY,    R64     }, GP0, ALLOW_SEG | (REX | REXW) | (F_MODRM | F_MODRM_REG),			          NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 8, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
    { "add",    2, { M_ANY,    R64E    }, GP3, ALLOW_SEG | (REX | REXW | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x01, 0x00, 0x00 }, 8, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },

    //02 / r ADD r8, r / m8 RM Valid Valid Add r / m8 to r8.
    //REX + 02 / r ADD r8*, r / m8 * RM Valid N.E.Add r / m8 to r8.
    { "add",    2, { R8,       M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x02, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0, ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1, P_86, 0, NULL },
    { "add",    2, { R8H,      M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x02, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
    { "add",    2, { R8E,      M_ANY   }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x02, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "add",    2, { R8U,      M_ANY   }, GP3, ALLOW_SEG | (REX) | (F_MODRM | F_MODRM_REG),						      NO_VEX, NO_EVEX, 1, 1, { 0x02, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },

    //03 / r ADD r16, r / m16 RM Valid Valid Add r / m16 to r16.
    //03 / r ADD r32, r / m32 RM Valid Valid Add r / m32 to r32.
    //REX.W + 03 / r ADD r64, r / m64 RM Valid N.E.Add r / m64 to r64.  { "add",    2, { R16,      M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x13, 0x00, 0x00 }, 2, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
    { "add",    2, { R16E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x03, 0x00, 0x00 }, 2, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "add",    2, { R32,      M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x03, 0x00, 0x00 }, 4, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
    { "add",    2, { R32E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x03, 0x00, 0x00 }, 4, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "add",    2, { R64,      M_ANY   }, GP0, ALLOW_SEG | (REX | REXW) | (F_MODRM | F_MODRM_REG),				  NO_VEX, NO_EVEX, 1, 1, { 0x03, 0x00, 0x00 }, 8, 0, MOD_REG_MEM, 0, 0,				          ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "add",    2, { R64E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXW | REXR) | (F_MODRM | F_MODRM_REG),	  NO_VEX, NO_EVEX, 1, 1, { 0x03, 0x00, 0x00 }, 8, 0, MOD_REG_MEM, 0, 0,				          ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },

    //F30F38 F6 / r ADOX r32, r / m32 RM V / V ADX Unsigned addition of r32 with OF, r / m32 to r32, writes OF.
    //F3 REX.w 0F38 F6 / r ADOX r64, r / m64 RM V / NE ADX Unsigned addition of r64 with OF, r / m64 to r64, writes OF.
    { "adox",    2, { R32,      R32     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							                  NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,            (X32 | X64), REG_DST,  PFX_0xF3F38, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "adox",    2, { R32E,     R32E    }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	        NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,            (X32 | X64), REG_DST,  PFX_0xF3F38, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adox",    2, { R32E,     R32     }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,            (X32 | X64), REG_DST,  PFX_0xF3F38, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adox",    2, { R32,      R32E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,            (X32 | X64), REG_DST,  PFX_0xF3F38, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adox",    2, { R64,      R64     }, GP3, (REX | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		            NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), REG_DST,  PFX_0xF3F38, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adox",    2, { R64E,     R64E    }, GP3, (REX | REXR | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),  NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), REG_DST,  PFX_0xF3F38, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adox",    2, { R64,      R64E    }, GP3, (REX | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		      NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), REG_DST,  PFX_0xF3F38, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adox",    2, { R64E,     R64     }, GP3, (REX | REXR | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		      NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), REG_DST,  PFX_0xF3F38, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "adox",    2, { R32,      M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                        NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 4, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE,       (X32 | X64), REG_DST, PFX_0xF3F38, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
    { "adox",    2, { R32E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	                NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 4, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE,       (X32 | X64), REG_DST, PFX_0xF3F38, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "adox",    2, { R64,      M_ANY   }, GP0, ALLOW_SEG | (REX | REXW) | (F_MODRM | F_MODRM_REG),				          NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 8, 0, MOD_REG_MEM, 0, 0,				          ADDR_SIZE_OVERRIDE,       (X64), REG_DST, PFX_0xF3F38, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "adox",    2, { R64E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXW | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0xf6, 0x00, 0x00 }, 8, 0, MOD_REG_MEM, 0, 0,				          ADDR_SIZE_OVERRIDE,       (X64), REG_DST, PFX_0xF3F38, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    
	//24 ib AND AL, imm8 I Valid Valid AND imm8 to AL.
    { "and",    2, { R8_AL,    IMM8    }, GP0, (F_OPCODE_REG),												          NO_VEX, NO_EVEX, 1, 1, { 0x24, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				         0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },

    //25 iw AND AX, imm16 I Valid Valid AND imm16 to AX.
    //25 id AND EAX, imm32 I Valid Valid AND imm32 to EAX.
    //REX.W + 25 id AND RAX, imm32 I Valid N.E.AND imm32 sign extended to 64 - bits to RAX.
    { "and",    2, { R16_AX,   IMM16   }, GP0, (F_OPCODE_REG),												          NO_VEX, NO_EVEX, 1, 1, { 0x25, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "and",    2, { R32_EAX,  IMM32   }, GP0, (F_OPCODE_REG),												          NO_VEX, NO_EVEX, 1, 1, { 0x25, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "and",    2, { R64_RAX,  IMM32   }, GP3, REX | (F_OPCODE_REG),						                NO_VEX, NO_EVEX, 1, 1, { 0x25, 0x00, 0x00 }, 8, 0, NO_MOD,      0, 0,				         0,                  (X64), NO_DST,              NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },

    //80 / 2 ib AND r / m8, imm8 MI Valid Valid AND imm8 to r / m8.
    //REX + 80 / 2 ib AND r / m8 * , imm8 MI Valid N.E.AND imm8 to r / m8.
    { "and",    2, { R8,       IMM8    }, GP3, REX | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		    NO_VEX, NO_EVEX, 1, 1, { 0x80, 0x04, 0x00 }, 1, 0, MOD_REG_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "and",    2, { R8H,      IMM8    }, GP3, REX | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		    NO_VEX, NO_EVEX, 1, 1, { 0x80, 0x04, 0x00 }, 1, 0, MOD_REG_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "and",    2, { M8,       IMM8    }, GP0, REX | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		    NO_VEX, NO_EVEX, 1, 1, { 0x80, 0x04, 0x00 }, 1, 0, MOD_MEM_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },

    //81 / 2 iw AND r / m16, imm16 MI Valid Valid AND imm16 to r / m16.
    //81 / 2 id AND r / m32, imm32 MI Valid Valid AND with CF imm32 to r / m32.
    //REX.W + 81 / 2 id AND r / m64, imm32 MI Valid N.E.AND with CF imm32 sign extended to 64 - bits to r / m64.
    { "and",    2, { R16,      IMM16   }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT),		          NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x04, 0x00 }, 2, 0, MOD_REG_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "and",    2, { M16,      IMM16   }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT),		          NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x04, 0x00 }, 2, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },
    { "and",    2, { R32,      IMM32   }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT),		          NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x04, 0x00 }, 4, 0, MOD_REG_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "and",    2, { M32,      IMM32   }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT),		          NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x04, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },
    { "and",    2, { R64,      IMM32   }, GP3, REXW | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		  NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x04, 0x00 }, 8, 0, MOD_REG_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
    { "and",    2, { M64,      IMM32   }, GP3, REXW | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		  NO_VEX, NO_EVEX, 1, 1, { 0x81, 0x04, 0x00 }, 8, 0, MOD_MEM_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_64,  0, NULL },

    //83 / 2 ib AND r / m16, imm8 MI Valid Valid AND with CF sign - extended imm8 to r / m16.
    //83 / 2 ib AND r / m32, imm8 MI Valid Valid AND with CF sign - extended imm8 into r / m32.
    //REX.W + 83 / 2 ib AND r / m64, imm8 MI Valid N.E.AND with CF sign - extended imm8 into r / m64.
    { "and",    2, { R16,      IMM8    }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT | IMM8_ONLY),	NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x04, 0x00 }, 2, 0, MOD_REG_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "and",    2, { M16,      IMM8    }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT | IMM8_ONLY),	NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x04, 0x00 }, 2, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },
    { "and",    2, { R32,      IMM8    }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT | IMM8_ONLY),	NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x04, 0x00 }, 4, 0, MOD_REG_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
    { "and",    2, { M32,      IMM8    }, GP0, (F_MODRM_RM | F_MODRM | OPCODE_EXT | IMM8_ONLY),	NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x04, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_86,  0, NULL },
    { "and",    2, { R64,      IMM8    }, GP3, REXW | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		  NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x04, 0x00 }, 8, 0, MOD_REG_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
    { "and",    2, { M64,      IMM8    }, GP3, REXW | (F_MODRM_RM | F_MODRM | OPCODE_EXT),		  NO_VEX, NO_EVEX, 1, 1, { 0x83, 0x04, 0x00 }, 8, 0, MOD_MEM_IMM, 0, 0,	               0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0, P_64,  0, NULL },

    //20 / r AND r / m8, r8 MR Valid Valid AND byte register to r / m8.
    //REX + 20 / r AND r / m8 * , r8* MR Valid N.E.AND byte register to r / m64.
    { "and",    2, { R8,       R8      }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM | OPCODE_EXT | IMM8_ONLY),     NO_VEX, NO_EVEX, 1, 1, { 0x20, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "and",    2, { R8,       R8H     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM | OPCODE_EXT | IMM8_ONLY),		  NO_VEX, NO_EVEX, 1, 1, { 0x20, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "and",    2, { R8H,      R8      }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM | OPCODE_EXT | IMM8_ONLY),		  NO_VEX, NO_EVEX, 1, 1, { 0x20, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "and",    2, { R8H,      R8H     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM | OPCODE_EXT | IMM8_ONLY),		  NO_VEX, NO_EVEX, 1, 1, { 0x20, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "and",    2, { R8E,      R8E     }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	      NO_VEX, NO_EVEX, 1, 1, { 0x20, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64),             RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "and",    2, { R8,       R8E     }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x20, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64),             RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "and",    2, { R8E,      R8      }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x20, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64),             RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "and",    2, { R8U,      R8      }, GP3, (REX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),					            NO_VEX, NO_EVEX, 1, 1, { 0x20, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64),             RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "and",    2, { M_ANY,    R8      }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                        NO_VEX, NO_EVEX, 1, 1, { 0x20, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
    { "and",    2, { M_ANY,    R8H     }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                        NO_VEX, NO_EVEX, 1, 1, { 0x20, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
    { "and",    2, { M_ANY,    R8E     }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	              NO_VEX, NO_EVEX, 1, 1, { 0x20, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
    { "and",    2, { M_ANY,    R8U     }, GP3, ALLOW_SEG | (REX) | (F_MODRM | F_MODRM_REG),						            NO_VEX, NO_EVEX, 1, 1, { 0x20, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },

    //21 / r AND r / m16, r16 MR Valid Valid AND r16 to r / m16.
    //21 / r AND r / m32, r32 MR Valid Valid AND with CF r32 to r / m32.
    //REX.W + 21 / r AND r / m64, r64 MR Valid N.E.AND with CF r64 to r / m64.
    { "and",    2, { R16,      R16     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							                NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "and",    2, { R16E,     R16E    }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),        NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "and",    2, { R16E,     R16     }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "and",    2, { R16,      R16E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "and",    2, { R32,      R32     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							                NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "and",    2, { R32E,     R32E    }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	      NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "and",    2, { R32E,     R32     }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "and",    2, { R32,      R32E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				        NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "and",    2, { R64,      R64     }, GP3, (REX | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		            NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "and",    2, { R64E,     R64E    }, GP3, (REX | REXR | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM), NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "and",    2, { R64,      R64E    }, GP3, (REX | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		    NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "and",    2, { R64E,     R64     }, GP3, (REX | REXR | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		    NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
    { "and",    2, { M_ANY,    R16     }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                        NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 2, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
    { "and",    2, { M_ANY,    R16E    }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	              NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 2, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
    { "and",    2, { M_ANY,    R32     }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                        NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 4, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
    { "and",    2, { M_ANY,    R32E    }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	              NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 4, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
    { "and",    2, { M_ANY,    R64     }, GP0, ALLOW_SEG | (REX | REXW) | (F_MODRM | F_MODRM_REG),			          NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 8, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
    { "and",    2, { M_ANY,    R64E    }, GP3, ALLOW_SEG | (REX | REXW | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x21, 0x00, 0x00 }, 8, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },

    //22 / r AND r8, r / m8 RM Valid Valid AND r / m8 to byte register.
    //REX + 22 / r AND r8*, r / m8 * RM Valid N.E.AND r / m64 to byte register.
    { "and",    2, { R8,       M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x22, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
    { "and",    2, { R8H,      M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x22, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
    { "and",    2, { R8E,      M_ANY   }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x22, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "and",    2, { R8U,      M_ANY   }, GP3, ALLOW_SEG | (REX) | (F_MODRM | F_MODRM_REG),						      NO_VEX, NO_EVEX, 1, 1, { 0x22, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },

    //23 / r AND r16, r / m16 RM Valid Valid AND r / m16 to r16.
    //23 / r AND r32, r / m32 RM Valid Valid AND with CF r / m32 to r32.
    //REX.W + 23 / r AND r64, r / m64 RM Valid N.E.AND with CF r / m64 to r64.
    { "and",    2, { R16,      M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x23, 0x00, 0x00 }, 2, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
    { "and",    2, { R16E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x23, 0x00, 0x00 }, 2, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "and",    2, { R32,      M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x23, 0x00, 0x00 }, 4, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
    { "and",    2, { R32E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x23, 0x00, 0x00 }, 4, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "and",    2, { R64,      M_ANY   }, GP0, ALLOW_SEG | (REX | REXW) | (F_MODRM | F_MODRM_REG),				  NO_VEX, NO_EVEX, 1, 1, { 0x23, 0x00, 0x00 }, 8, 0, MOD_REG_MEM, 0, 0,				          ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
    { "and",    2, { R64E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXW | REXR) | (F_MODRM | F_MODRM_REG),	  NO_VEX, NO_EVEX, 1, 1, { 0x23, 0x00, 0x00 }, 8, 0, MOD_REG_MEM, 0, 0,				          ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },

    //ARPL r / m16, r16 63 / r 
    { "arpl",    2, { R16,      R16     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							          NO_VEX, NO_EVEX, 1, 1, { 0x63, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, 0, 0,                   (X16 | X32), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
    { "arpl",    2, { M_ANY,    R16     }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                NO_VEX, NO_EVEX, 1, 1, { 0x63, 0x00, 0x00 }, 2, 0, MOD_MEM_REG, 0, 0, 0, (X16 | X32), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },

    /* General Purpose Reg->Reg moves (We use 8a/8b(masm) instead of 88/89(gcc) */
	{ "mov",    2, { R8,       R8      }, GP0, (F_MODRM_REG | F_MODRM_RM),    NO_VEX, NO_EVEX, 1, 1, { 0x8a, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R8,       R8H     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),		NO_VEX, NO_EVEX, 1, 1, { 0x8a, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R8H,      R8      }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),		NO_VEX, NO_EVEX, 1, 1, { 0x8a, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R8H,      R8H     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),		NO_VEX, NO_EVEX, 1, 1, { 0x8a, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R8E,      R8E     }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		  NO_VEX, NO_EVEX, 1, 1, { 0x8a, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64            ), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R8,       R8E     }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8a, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64            ), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R8E,      R8      }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8a, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64            ), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R8U,      R8      }, GP3, (REX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),					  NO_VEX, NO_EVEX, 1, 1, { 0x8a, 0x00, 0x00 }, 1, 0, MOD_REG_REG, 0, 0,                0,                  (X64            ), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R16,      R16     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R16E,     R16E    }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		  NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64            ), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R16E,     R16     }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64            ), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R16,      R16E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64            ), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R32,      R32     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R32E,     R32E    }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		  NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64            ), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R32E,     R32     }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64            ), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R32,      R32E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64            ), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R64,      R64     }, GP3, (REX | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		          NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64            ), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R64E,     R64E    }, GP3, (REX | REXR | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM), NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64            ), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R64,      R64E    }, GP3, (REX | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		  NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64            ), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R64E,     R64     }, GP3, (REX | REXR | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		  NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64            ), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	/* CR0-CR8 register moves */
	{ "mov",    2, { R32,      R_CR    }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x20, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R64,      R_CR    }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x20, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R64E,     R_CR    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),			      NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x20, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R64,      R_CR8   }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x20, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R64E,     R_CR8   }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	      NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x20, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R_CR,     R32     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x22, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R_CR,     R64     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x22, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R_CR,     R64E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x22, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R_CR8,    R64     }, GP3, (REX | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x22, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R_CR8,    R64E    }, GP3, (REX | REXB | REXR) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x22, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	/* DR0-DR7 register moves */
	{ "mov",    2, { R32,      R_DR    }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x21, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R64,      R_DR    }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x21, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R64E,     R_DR    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),			      NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x21, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R_DR,     R32     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x23, 0x00 }, 4, 0, MOD_REG_REG, 0, 0,                0,                  (X16 | X32), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R_DR,     R64     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x23, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R_DR,     R64E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 2, { 0x0f, 0x23, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,                0,                  (X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	/* Segment register to register moves */
	{ "mov",    2, { R16,      R_SEG   }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 1, { 0x8c, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R16,      R_SEGE  }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 1, { 0x8c, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_386, 0, NULL },
	{ "mov",    2, { R32,      R_SEG   }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 1, { 0x8c, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_386, 0, NULL },
	{ "mov",    2, { R32,      R_SEGE  }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 1, { 0x8c, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_386, 0, NULL },
	{ "mov",    2, { R64,      R_SEG   }, GP3, (REX | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8c, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,				0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R64,      R_SEGE  }, GP3, (REX | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8c, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,				0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R16E,     R_SEG   }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8c, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R16E,     R_SEGE  }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8c, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R32E,     R_SEG   }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8c, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R32E,     R_SEGE  }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8c, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R64E,     R_SEG   }, GP3, (REX | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		  NO_VEX, NO_EVEX, 1, 1, { 0x8c, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,				0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R64E,     R_SEGE  }, GP3, (REX | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),		  NO_VEX, NO_EVEX, 1, 1, { 0x8c, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,				0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R_SEG,    R16     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 1, { 0x8e, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R_SEGE,   R16     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 1, { 0x8e, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_386, 0, NULL },
	{ "mov",    2, { R_SEG,    R32     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 1, { 0x8e, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_386, 0, NULL },
	{ "mov",    2, { R_SEGE,   R32     }, GP0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 1, { 0x8e, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_386, 0, NULL },
	{ "mov",    2, { R_SEG,    R64     }, GP3, (REX | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8e, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,				0,                  (X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R_SEGE,   R64     }, GP3, (REX | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8e, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,				0,                  (X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R_SEG,    R16E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8e, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R_SEGE,   R16E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8e, 0x00, 0x00 }, 2, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R_SEG,    R32E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8e, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), REG_DST,  NO_PREFIX, NO_IMM,	   NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R_SEGE,   R32E    }, GP3, (REX | REXB) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),				  NO_VEX, NO_EVEX, 1, 1, { 0x8e, 0x00, 0x00 }, 4, 0, MOD_REG_REG, 0, OP_SIZE_OVERRIDE, 0,                  (X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R_SEG,    R64E    }, GP3, (REX | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),        NO_VEX, NO_EVEX, 1, 1, { 0x8e, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,				0,                  (X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R_SEGE,   R64E    }, GP3, (REX | REXB | REXW) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),        NO_VEX, NO_EVEX, 1, 1, { 0x8e, 0x00, 0x00 }, 8, 0, MOD_REG_REG, 0, 0,				0,                  (X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_64,  0, NULL },
	/* Reg->Immediate moves */
	{ "mov",    2, { R8,       IMM8    }, GP0, (F_OPCODE_REG),												      NO_VEX, NO_EVEX, 1, 1, { 0xb0, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R8H,      IMM8    }, GP0, (F_OPCODE_REG),													  NO_VEX, NO_EVEX, 1, 1, { 0xb0, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R8U,      IMM8    }, GP3, (REX) | (F_OPCODE_REG),											  NO_VEX, NO_EVEX, 1, 1, { 0xb0, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				0,                  (X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R8E,      IMM8    }, GP3, (REX | REXB) | (F_OPCODE_REG),							          NO_VEX, NO_EVEX, 1, 1, { 0xb0, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				0,                  (X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R16,      IMM8    }, GP0, (F_OPCODE_REG),												      NO_VEX, NO_EVEX, 1, 1, { 0xb8, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R16E,     IMM8    }, GP3, (REX | REXB) | (F_OPCODE_REG),								      NO_VEX, NO_EVEX, 1, 1, { 0xb8, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE,	0,                  (X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R16,      IMM16   }, GP0, (F_OPCODE_REG),												      NO_VEX, NO_EVEX, 1, 1, { 0xb8, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R16E,     IMM16   }, GP3, (REX | REXB) | (F_OPCODE_REG),								      NO_VEX, NO_EVEX, 1, 1, { 0xb8, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE,	0,                  (X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R32,      IMM8    }, GP0, (F_OPCODE_REG),												      NO_VEX, NO_EVEX, 1, 1, { 0xb8, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R32E,     IMM8    }, GP3, (REX | REXB) | (F_OPCODE_REG),								      NO_VEX, NO_EVEX, 1, 1, { 0xb8, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE,	0,                  (X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R32,      IMM16   }, GP0, (F_OPCODE_REG),												      NO_VEX, NO_EVEX, 1, 1, { 0xb8, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R32E,     IMM16   }, GP3, (REX | REXB) | (F_OPCODE_REG),								      NO_VEX, NO_EVEX, 1, 1, { 0xb8, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE,	0,                  (X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R32,      IMM32   }, GP0, (F_OPCODE_REG),												      NO_VEX, NO_EVEX, 1, 1, { 0xb8, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_86,  0, NULL },
	{ "mov",    2, { R32E,     IMM32   }, GP3, (REX | REXB) | (F_OPCODE_REG),								      NO_VEX, NO_EVEX, 1, 1, { 0xb8, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE,	0,                  (X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R64,      IMM64   }, GP3, (REX | REXW) | (F_OPCODE_REG),								      NO_VEX, NO_EVEX, 1, 1, { 0xb8, 0x00, 0x00 }, 8, 0, NO_MOD,      0, 0,				0,                  (X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R64E,     IMM64   }, GP3, (REX | REXW | REXB) | (F_OPCODE_REG),						      NO_VEX, NO_EVEX, 1, 1, { 0xb8, 0x00, 0x00 }, 8, 0, NO_MOD,      0, 0,				0,                  (X64), NO_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,     P_64,  0, NULL },
	{ "mov",    2, { R64,      IMM8    }, GP3, (REX | REXW) | (F_MODRM | F_MODRM_RM),						      NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_REG_IMM, 0, 0,				0,                  (X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,	   P_64,  0, NULL },
	{ "mov",    2, { R64E,     IMM8    }, GP3, (REX | REXW | REXB) | (F_MODRM | F_MODRM_RM),					  NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_REG_IMM, 0, 0,				0,                  (X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,	   P_64,  0, NULL },
	{ "mov",    2, { R64,      IMM16   }, GP3, (REX | REXW) | (F_MODRM | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_REG_IMM, 0, 0,				0,                  (X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,	   P_64,  0, NULL },
	{ "mov",    2, { R64E,     IMM16   }, GP3, (REX | REXW | REXB) | (F_MODRM | F_MODRM_RM),					  NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_REG_IMM, 0, 0,				0,                  (X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,	   P_64,  0, NULL },
	{ "mov",    2, { R64,      IMM32   }, GP3, (REX | REXW) | (F_MODRM | F_MODRM_RM),							  NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_REG_IMM, 0, 0,				0,                  (X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,	   P_64,  0, NULL },
	{ "mov",    2, { R64E,     IMM32   }, GP3, (REX | REXW | REXB) | (F_MODRM | F_MODRM_RM),					  NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_REG_IMM, 0, 0,				0,                  (X64), RM_DST,  NO_PREFIX, IMM_OPND_1, NO_MEM,	   P_64,  0, NULL },
	/* Mem->Reg moves */
	{ "mov",    2, { R8,       M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x8a, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
	{ "mov",    2, { R8H,      M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x8a, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
	{ "mov",    2, { R8E,      M_ANY   }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x8a, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
	{ "mov",    2, { R8U,      M_ANY   }, GP3, ALLOW_SEG | (REX) | (F_MODRM | F_MODRM_REG),						      NO_VEX, NO_EVEX, 1, 1, { 0x8a, 0x00, 0x00 }, 1, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
	{ "mov",    2, { R16,      M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 2, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
	{ "mov",    2, { R16E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 2, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
	{ "mov",    2, { R32,      M_ANY   }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 4, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_86,  0, NULL },
	{ "mov",    2, { R32E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 4, 0, MOD_REG_MEM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
	{ "mov",    2, { R64,      M_ANY   }, GP0, ALLOW_SEG | (REX | REXW) | (F_MODRM | F_MODRM_REG),				  NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 8, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
	{ "mov",    2, { R64E,     M_ANY   }, GP3, ALLOW_SEG | (REX | REXW | REXR) | (F_MODRM | F_MODRM_REG),	  NO_VEX, NO_EVEX, 1, 1, { 0x8b, 0x00, 0x00 }, 8, 0, MOD_REG_MEM, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_OPND_1, P_64,  0, NULL },
	{ "mov",    2, { M_ANY,    R8      }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x88, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
	{ "mov",    2, { M_ANY,    R8H     }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x88, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
	{ "mov",    2, { M_ANY,    R8E     }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	        NO_VEX, NO_EVEX, 1, 1, { 0x88, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
	{ "mov",    2, { M_ANY,    R8U     }, GP3, ALLOW_SEG | (REX) | (F_MODRM | F_MODRM_REG),						      NO_VEX, NO_EVEX, 1, 1, { 0x88, 0x00, 0x00 }, 1, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
	{ "mov",    2, { M_ANY,    R16     }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x89, 0x00, 0x00 }, 2, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
	{ "mov",    2, { M_ANY,    R16E    }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	              NO_VEX, NO_EVEX, 1, 1, { 0x89, 0x00, 0x00 }, 2, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
	{ "mov",    2, { M_ANY,    R32     }, GP0, ALLOW_SEG | (F_MODRM | F_MODRM_REG),				                  NO_VEX, NO_EVEX, 1, 1, { 0x89, 0x00, 0x00 }, 4, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_86,  0, NULL },
	{ "mov",    2, { M_ANY,    R32E    }, GP3, ALLOW_SEG | (REX | REXR) | (F_MODRM | F_MODRM_REG),	              NO_VEX, NO_EVEX, 1, 1, { 0x89, 0x00, 0x00 }, 4, 0, MOD_MEM_REG, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
	{ "mov",    2, { M_ANY,    R64     }, GP0, ALLOW_SEG | (REX | REXW) | (F_MODRM | F_MODRM_REG),			      NO_VEX, NO_EVEX, 1, 1, { 0x89, 0x00, 0x00 }, 8, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
	{ "mov",    2, { M_ANY,    R64E    }, GP3, ALLOW_SEG | (REX | REXW | REXR) | (F_MODRM | F_MODRM_REG),	      NO_VEX, NO_EVEX, 1, 1, { 0x89, 0x00, 0x00 }, 8, 0, MOD_MEM_REG, 0, 0,				ADDR_SIZE_OVERRIDE, (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_OPND_0, P_64,  0, NULL },
	/* Moffset moves */
	{ "mov",    2, { R8_AL,    M_ANY   }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa0, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				0,                  (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_86,  0, NULL },
	{ "mov",    2, { R8_AL,    M8      }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa0, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				0,                  (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_86,  0, NULL },
	{ "mov",    2, { M_ANY,    R8_AL   }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa2, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_86,  0, NULL },
	{ "mov",    2, { M8,       R8_AL   }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa2, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_86,  0, NULL },
	{ "mov",    2, { R16_AX,   M_ANY   }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa1, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE,	0,					(X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_86,  0, NULL },
	{ "mov",    2, { M_ANY,    R16_AX  }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa3, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_86,  0, NULL },
	{ "mov",    2, { R16_AX,   M16     }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa1, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE,	0,					(X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_86,  0, NULL },
	{ "mov",    2, { M16,      R16_AX  }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa3, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_86,  0, NULL },
	{ "mov",    2, { R32_EAX,  M_ANY   }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,                    NO_VEX, NO_EVEX, 1, 1, { 0xa1, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_86,  0, NULL },
	{ "mov",    2, { M_ANY,    R32_EAX }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,		              NO_VEX, NO_EVEX, 1, 1, { 0xa3, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE,	0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_86,  0, NULL },
	{ "mov",    2, { R32_EAX,  M32     }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,                    NO_VEX, NO_EVEX, 1, 1, { 0xa1, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_86,  0, NULL },
	{ "mov",    2, { M32,      R32_EAX }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,		              NO_VEX, NO_EVEX, 1, 1, { 0xa3, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE,	0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_86,  0, NULL },
	{ "mov",    2, { R64_RAX,  M_ANY   }, GP3, (ALLOW_SEG | ALLOW_SEGX) | (REX | REXW) | (DSPW) | NO_MEM_REG,     NO_VEX, NO_EVEX, 1, 1, { 0xa1, 0x00, 0x00 }, 8, 0, NO_MOD,      0, 0,				0,                  (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_64,  0, NULL },
	{ "mov",    2, { M_ANY,    R64_RAX }, GP3, (ALLOW_SEG | ALLOW_SEGX) | (REX | REXW) | (DSPW) | NO_MEM_REG,     NO_VEX, NO_EVEX, 1, 1, { 0xa3, 0x00, 0x00 }, 8, 0, NO_MOD,      0, 0,				0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_64,  0, NULL },
	{ "mov",    2, { R64_RAX,  M64     }, GP3, (ALLOW_SEG | ALLOW_SEGX) | (REX | REXW) | (DSPW) | NO_MEM_REG,     NO_VEX, NO_EVEX, 1, 1, { 0xa1, 0x00, 0x00 }, 8, 0, NO_MOD,      0, 0,				0,                  (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_64,  0, NULL },
	{ "mov",    2, { M64,      R64_RAX }, GP3, (ALLOW_SEG | ALLOW_SEGX) | (REX | REXW) | (DSPW) | NO_MEM_REG,     NO_VEX, NO_EVEX, 1, 1, { 0xa3, 0x00, 0x00 }, 8, 0, NO_MOD,      0, 0,				0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_64,  0, NULL },
	{ "movabs", 2, { R8_AL,    M_ANY   }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa0, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				0,                  (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_86,  0, NULL },
	{ "movabs", 2, { R8_AL,    M8      }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa0, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				0,                  (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_86,  0, NULL },
	{ "movabs", 2, { M_ANY,    R8_AL   }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa2, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_86,  0, NULL },
	{ "movabs", 2, { M8,       R8_AL   }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa2, 0x00, 0x00 }, 1, 0, NO_MOD,      0, 0,				0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_86,  0, NULL },
	{ "movabs", 2, { R16_AX,   M_ANY   }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa1, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE,	0,					(X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_86,  0, NULL },
	{ "movabs", 2, { M_ANY,    R16_AX  }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa3, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_86,  0, NULL },
	{ "movabs", 2, { R16_AX,   M16     }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa1, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE,	0,					(X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_86,  0, NULL },
	{ "movabs", 2, { M16,      R16_AX  }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,				      NO_VEX, NO_EVEX, 1, 1, { 0xa3, 0x00, 0x00 }, 2, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_86,  0, NULL },
	{ "movabs", 2, { R32_EAX,  M_ANY   }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,                    NO_VEX, NO_EVEX, 1, 1, { 0xa1, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_86,  0, NULL },
	{ "movabs", 2, { M_ANY,    R32_EAX }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,		              NO_VEX, NO_EVEX, 1, 1, { 0xa3, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE,	0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_86,  0, NULL },
	{ "movabs", 2, { R32_EAX,  M32     }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,                    NO_VEX, NO_EVEX, 1, 1, { 0xa1, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE, 0,                  (X16 | X32 | X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_86,  0, NULL },
	{ "movabs", 2, { M32,      R32_EAX }, GP0, (ALLOW_SEG | ALLOW_SEGX) | (DSPW) | NO_MEM_REG,		              NO_VEX, NO_EVEX, 1, 1, { 0xa3, 0x00, 0x00 }, 4, 0, NO_MOD,      0, OP_SIZE_OVERRIDE,	0,                  (X16 | X32 | X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_86,  0, NULL },
	{ "movabs", 2, { R64_RAX,  M_ANY   }, GP3, (ALLOW_SEG | ALLOW_SEGX) | (REX | REXW) | (DSPW) | NO_MEM_REG,     NO_VEX, NO_EVEX, 1, 1, { 0xa1, 0x00, 0x00 }, 8, 0, NO_MOD,      0, 0,				0,                  (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_64,  0, NULL },
	{ "movabs", 2, { M_ANY,    R64_RAX }, GP3, (ALLOW_SEG | ALLOW_SEGX) | (REX | REXW) | (DSPW) | NO_MEM_REG,     NO_VEX, NO_EVEX, 1, 1, { 0xa3, 0x00, 0x00 }, 8, 0, NO_MOD,      0, 0,				0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_64,  0, NULL },
	{ "movabs", 2, { R64_RAX,  M64     }, GP3, (ALLOW_SEG | ALLOW_SEGX) | (REX | REXW) | (DSPW) | NO_MEM_REG,     NO_VEX, NO_EVEX, 1, 1, { 0xa1, 0x00, 0x00 }, 8, 0, NO_MOD,      0, 0,				0,                  (X64), REG_DST, NO_PREFIX, NO_IMM    , MEM_ABS_1, P_64,  0, NULL },
	{ "movabs", 2, { M64,      R64_RAX }, GP3, (ALLOW_SEG | ALLOW_SEGX) | (REX | REXW) | (DSPW) | NO_MEM_REG,     NO_VEX, NO_EVEX, 1, 1, { 0xa3, 0x00, 0x00 }, 8, 0, NO_MOD,      0, 0,				0,                  (X64), RM_DST,  NO_PREFIX, NO_IMM    , MEM_ABS_0, P_64,  0, NULL },
	/* Mem->Immediate moves*/
	{ "mov",    2, { M8,       IMM8    }, GP3, ALLOW_SEG | (F_MODRM),											            NO_VEX, NO_EVEX, 1, 1, { 0xc6, 0x00, 0x00 }, 1, 0, MOD_MEM_IMM, 0, 0,	            ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0,P_86,  0, NULL },
	{ "mov",    2, { M16,      IMM8    }, GP3, ALLOW_SEG | (F_MODRM),											            NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 2, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0,P_86,  0, NULL },
	{ "mov",    2, { M16,      IMM16   }, GP3, ALLOW_SEG | (F_MODRM),											            NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 2, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0,P_86,  0, NULL },
	{ "mov",    2, { M32,      IMM8    }, GP3, ALLOW_SEG | (REXP_MEM) | (F_MODRM),								    NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0,P_86,  0, NULL },
	{ "mov",    2, { M32,      IMM16   }, GP3, ALLOW_SEG | (REXP_MEM) | (F_MODRM),								    NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0,P_86,  0, NULL },
	{ "mov",    2, { M32,      IMM32   }, GP3, ALLOW_SEG | (REXP_MEM) | (F_MODRM),								    NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0,P_86,  0, NULL },
	{ "mov",    2, { M64,      IMM8    }, GP3, ALLOW_SEG | (REXP_MEM) | (F_MODRM),								    NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0,P_86,  0, NULL },
	{ "mov",    2, { M64,      IMM16   }, GP3, ALLOW_SEG | (REXP_MEM) | (F_MODRM),								    NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0,P_86,  0, NULL },
	{ "mov",    2, { M64,      IMM32   }, GP3, ALLOW_SEG | (REXP_MEM) | (F_MODRM),								    NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0,P_86,  0, NULL },
	{ "mov",    2, { M_ANY,    IMM8    }, GP3, ALLOW_SEG | (REXP_MEM) | (F_MODRM),								    NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0,P_86,  0, NULL },
	{ "mov",    2, { M_ANY,    IMM16   }, GP3, ALLOW_SEG | (REXP_MEM) | (F_MODRM),								    NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0,P_86,  0, NULL },
	{ "mov",    2, { M_ANY,    IMM32   }, GP3, ALLOW_SEG | (REXP_MEM) | (F_MODRM),								    NO_VEX, NO_EVEX, 1, 1, { 0xc7, 0x00, 0x00 }, 4, 0, MOD_MEM_IMM, 0, OP_SIZE_OVERRIDE,	ADDR_SIZE_OVERRIDE, (X16 | X32 | X64), RM_DST,  NO_PREFIX, IMM_OPND_1, MEM_OPND_0,P_86,  0, NULL },

	/* SSE */
	{ "movaps",    2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM), NO_VEX, NO_EVEX, 4, 1, { 0x28, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, PFX_0xF  , NO_IMM,     NO_MEM,    P_686 | P_SSE1,0, NULL },
	{ "movaps",    2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 4, 1, { 0x28, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, PFX_0xF  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE1,0, NULL },
	{ "movaps",    2, { M_ANY,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 4, 1, { 0x29, 0x00, 0x00 }, 16, 1, MOD_MEM_REG, 0, 0               ,0                  , (      X32 | X64), RM_DST,  PFX_0xF  , NO_IMM,     MEM_OPND_0,P_686 | P_SSE1,0, NULL },
  { "movapd",    2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM), NO_VEX, NO_EVEX, 8, 1, { 0x28, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "movapd",    2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 8, 1, { 0x28, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
  { "movapd",    2, { M_ANY,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 8, 1, { 0x29, 0x00, 0x00 }, 16, 1, MOD_MEM_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,  PFX_0x66F  , NO_IMM,     MEM_OPND_0,P_686 | P_SSE2,0, NULL },
  { "mulps",     2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM), NO_VEX, NO_EVEX, 4, 1, { 0x59, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, PFX_0xF  , NO_IMM,     NO_MEM,    P_686 | P_SSE1,0, NULL },
	{ "mulps",     2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 4, 1, { 0x59, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, PFX_0xF  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE1,0, NULL },
  { "mulpd",     2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 8, 1, { 0x59, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F , NO_IMM,     NO_MEM,    P_686 | P_SSE1,0, NULL },
  { "mulpd",     2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 8, 1, { 0x59, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F , NO_IMM,     MEM_OPND_1,P_686 | P_SSE1,0, NULL },
  { "mulsd",     2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 8, 1, { 0x59, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F, NO_IMM,     NO_MEM,    P_686 | P_SSE1,0, NULL },
  { "mulsd",     2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 8, 1, { 0x59, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F, NO_IMM,     MEM_OPND_1,P_686 | P_SSE1,0, NULL },
  { "mulss",     2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 4, 1, { 0x59, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, NO_IMM,     NO_MEM,    P_686 | P_SSE1,0, NULL },
  { "mulss",     2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 4, 1, { 0x59, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, NO_IMM,     MEM_OPND_1,P_686 | P_SSE1,0, NULL },
  { "pshufd",    3, { R_XMM,   R_XMM,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY, NO_VEX, NO_EVEX, 4, 1, { 0x70, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, PFX_0x66F, IMM_OPND_2, NO_MEM,    P_686 | P_SSE1,0, NULL },
	{ "pshufd",    3, { R_XMM,   M_ANY,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG) | IMM8_ONLY,		      NO_VEX, NO_EVEX, 4, 1, { 0x70, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, PFX_0x66F, IMM_OPND_2, MEM_OPND_1,P_686 | P_SSE1,0, NULL },
  { "pshufhw",   3, { R_XMM,   R_XMM,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY, NO_VEX, NO_EVEX, 4, 1, { 0x70, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, IMM_OPND_2, NO_MEM,    P_686 | P_SSE1,0, NULL },
  { "pshufhw",   3, { R_XMM,   M_ANY,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG) | IMM8_ONLY,	NO_VEX, NO_EVEX, 4, 1, { 0x70, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, IMM_OPND_2, MEM_OPND_1,P_686 | P_SSE1,0, NULL },
  { "pshuflw",   3, { R_XMM,   R_XMM,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY, NO_VEX, NO_EVEX, 4, 1, { 0x70, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F, IMM_OPND_2, NO_MEM,    P_686 | P_SSE1,0, NULL },
  { "pshuflw",   3, { R_XMM,   M_ANY,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG) | IMM8_ONLY,  NO_VEX, NO_EVEX, 4, 1, { 0x70, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F, IMM_OPND_2, MEM_OPND_1,P_686 | P_SSE1,0, NULL },
  { "pshufw",    3, { MMX64,   MMX64,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY, NO_VEX, NO_EVEX, 8, 1, { 0x70, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF, IMM_OPND_2, NO_MEM,    P_686 | P_SSE1,0, NULL },
  { "pshufw",    3, { MMX64,   M64,    IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG) | IMM8_ONLY,	NO_VEX, NO_EVEX, 8, 1, { 0x70, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF, IMM_OPND_2, MEM_OPND_1,P_686 | P_SSE1,0, NULL },
  { "pshufb",    2, { R_XMM,   R_XMM        }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 1, 1, { 0x00, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F38, NO_IMM, NO_MEM,    P_686 | P_SSE3,0, NULL },
  { "pshufb",    2, { R_XMM,   M128         }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),		          NO_VEX, NO_EVEX, 1, 1, { 0x00, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F38, NO_IMM, MEM_OPND_1,P_686 | P_SSE3,0, NULL },
  { "pshufb",    2, { MMX64,   MMX64        }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 8, 1, { 0x00, 0x00, 0x00 }, 8,  1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x0F38, NO_IMM, NO_MEM,    P_686 | P_SSE3,0, NULL },
  { "pshufb",    2, { MMX64,   M64          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),		          NO_VEX, NO_EVEX, 8, 1, { 0x00, 0x00, 0x00 }, 8,  1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x0F38, NO_IMM, MEM_OPND_1,P_686 | P_SSE3,0, NULL },
   /* ----------------------------------------------------------------------------------------------- */
   /* ADDPD xmm1, xmm2 / m128 66 0F 58 / r  */
   /* ----------------------------------------------------------------------------------------------- */
  { "addpd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x58, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "addpd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0x58, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* ADDPS xmm1, xmm2 / m128 NP 0F 58 /r */
    /* ----------------------------------------------------------------------------------------------- */
  { "addps",  2, { R_XMM,  R_XMM          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX,  4,  1, { 0x58, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX | PFX_0xF, NO_IMM,     NO_MEM,     P_686 | P_SSE2, 0, NULL },
  { "addps",  2, { R_XMM,  M_ANY          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX,  4,  1, { 0x58, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX | PFX_0xF, NO_IMM,     MEM_OPND_1, P_686 | P_SSE2, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* ADDSD xmm1, xmm2 / m128 F2 0F 58 /r   */
    /* ----------------------------------------------------------------------------------------------- */
  { "addsd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x58, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "addsd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0x58, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* ADDSS xmm1, xmm2 / m128 F3 0F 58 /r */
    /* ----------------------------------------------------------------------------------------------- */
  { "addss",  2, { R_XMM,  R_XMM          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX,  4,  1, { 0x58, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, NO_IMM,     NO_MEM,     P_686 | P_SSE2, 0, NULL },
  { "addss",  2, { R_XMM,  M_ANY          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX,  4,  1, { 0x58, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, NO_IMM,     MEM_OPND_1, P_686 | P_SSE2, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* HADDPD xmm1, xmm2 / m128 66 0F 7C / r */
    /* ----------------------------------------------------------------------------------------------- */
  { "haddpd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x7c, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "haddpd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						    NO_VEX, NO_EVEX, 16, 1, { 0x7c, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* HADDPS xmm1, xmm2 / m128 F2 0F 7C / r  */
    /* ----------------------------------------------------------------------------------------------- */
  { "haddps",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x7c, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "haddps",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						    NO_VEX, NO_EVEX, 16, 1, { 0x7c, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    
    /* ----------------------------------------------------------------------------------------------- */
    /* SUBPD xmm1, xmm2 / m128 66 0F 5C / r */
    /* ----------------------------------------------------------------------------------------------- */
  { "subpd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x5c, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "subpd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0x5c, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* SUBPS xmm1, xmm2/m128 NP 0F 5C /r */

    /* ----------------------------------------------------------------------------------------------- */
  { "subps",  2, { R_XMM,  R_XMM          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX,  4,  1, { 0x5c, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX | PFX_0xF, NO_IMM,     NO_MEM,     P_686 | P_SSE2, 0, NULL },
  { "subps",  2, { R_XMM,  M_ANY          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX,  4,  1, { 0x5c, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX | PFX_0xF, NO_IMM,     MEM_OPND_1, P_686 | P_SSE2, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* SUBSD xmm1, xmm2 / m64 F2 0F 5C / r */
    /* ----------------------------------------------------------------------------------------------- */
  { "subsd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x5c, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "subsd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0x5c, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* SUBSS xmm1, xmm2 / m32 F3 0F 5C / r */
    /* ----------------------------------------------------------------------------------------------- */
  { "subss",  2, { R_XMM,  R_XMM          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX,  4,  1, { 0x5c, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, NO_IMM,     NO_MEM,     P_686 | P_SSE2, 0, NULL },
  { "subss",  2, { R_XMM,  M_ANY          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX,  4,  1, { 0x5c, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, NO_IMM,     MEM_OPND_1, P_686 | P_SSE2, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
   /* DIVPD xmm1, xmm2 / m128 66 0F 5E / r */
   /* ----------------------------------------------------------------------------------------------- */
  { "divpd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x5e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "divpd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0x5e, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* DIVPS xmm1, xmm2/m128 NP 0F 5C /r */

    /* ----------------------------------------------------------------------------------------------- */
  { "divps",  2, { R_XMM,  R_XMM          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX,  4,  1, { 0x5e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX | PFX_0xF, NO_IMM,     NO_MEM,     P_686 | P_SSE2, 0, NULL },
  { "divps",  2, { R_XMM,  M_ANY          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX,  4,  1, { 0x5e, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX | PFX_0xF, NO_IMM,     MEM_OPND_1, P_686 | P_SSE2, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* DIVSD xmm1, xmm2 / m64 F2 0F 5C / r */
    /* ----------------------------------------------------------------------------------------------- */
  { "divsd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x5e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "divsd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0x5e, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* DIVSS xmm1, xmm2 / m32 F3 0F 5C / r */
    /* ----------------------------------------------------------------------------------------------- */
  { "divss",  2, { R_XMM,  R_XMM          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX,  4,  1, { 0x5c, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, NO_IMM,     NO_MEM,     P_686 | P_SSE2, 0, NULL },
  { "divss",  2, { R_XMM,  M_ANY          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX,  4,  1, { 0x5c, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, NO_IMM,     MEM_OPND_1, P_686 | P_SSE2, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
   /* ADDSUBPD xmm1, xmm2 / m128 66 0F D0 / r  */
   /* ----------------------------------------------------------------------------------------------- */
  { "addsubpd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0xd0, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "addsubpd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						    NO_VEX, NO_EVEX, 16, 1, { 0xd0, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* ADDSUBPS xmm1, xmm2 / m128 F2 0F D0 / r ADDSUBPS xmm1, xmm2/m128 NP 0F 5C /r */

    /* ----------------------------------------------------------------------------------------------- */
  { "addsubps",  2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0xd0, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "addsubps",  2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0xd0, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
   /* SQRTPD xmm1, xmm2 / m128 66 0F 51 / r
   /* ----------------------------------------------------------------------------------------------- */
  { "sqrtpd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x51, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "sqrtpd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						    NO_VEX, NO_EVEX, 16, 1, { 0x51, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* SQRTPS xmm1, xmm2/m128 NP 0F 51 /r*/
    /* ----------------------------------------------------------------------------------------------- */
  { "sqrtps",  2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x51, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX | PFX_0xF, NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "sqrtps",  2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0x51, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX | PFX_0xF, NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* SQRTSD xmm1, xmm2 / m64 F2 0F 51 / r */
    /* ----------------------------------------------------------------------------------------------- */
  { "sqrtsd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x51, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "sqrtsd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0x51, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* SQRTSS xmm1, xmm2 / m32 F3 0F 51 / r */
    /* ----------------------------------------------------------------------------------------------- */
  { "sqrtss",  2, { R_XMM,  R_XMM          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX,  4,  1, { 0x51, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, NO_IMM,     NO_MEM,     P_686 | P_SSE2, 0, NULL },
  { "sqrtss",  2, { R_XMM,  M_ANY          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX,  4,  1, { 0x51, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, NO_IMM,     MEM_OPND_1, P_686 | P_SSE2, 0, NULL },
    
   /* ----------------------------------------------------------------------------------------------- */
   /* MAXPD xmm1, xmm2 / m128 66 0F 5F / r                                                              */
   /* -----------------------------------------------------------------------------------------------   */
  { "maxpd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x5f, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "maxpd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0x5f, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* MAXPS xmm1, xmm2 / m128 NP 0F 5F / r  /r*/
    /* ----------------------------------------------------------------------------------------------- */
  { "maxps",  2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x5f, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX | PFX_0xF, NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "maxps",  2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0x5f, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX | PFX_0xF, NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* MAXSD xmm1, xmm2 / m64 F2 0F 5F / r  r */
    /* ----------------------------------------------------------------------------------------------- */
  { "maxsd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x5f, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "maxsd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						    NO_VEX, NO_EVEX, 16, 1, { 0x5f, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* MAXSS xmm1, xmm2 / m32 F3 0F 5F / r  r */
    /* ----------------------------------------------------------------------------------------------- */
  { "maxss",  2, { R_XMM,  R_XMM          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX,  4,  1, { 0x5f, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, NO_IMM,     NO_MEM,     P_686 | P_SSE2, 0, NULL },
  { "maxss",  2, { R_XMM,  M_ANY          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX,  4,  1, { 0x5f, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, NO_IMM,     MEM_OPND_1, P_686 | P_SSE2, 0, NULL },
    
    /* ----------------------------------------------------------------------------------------------- */
   /* MINPD xmm1, xmm2 / m128 66 0F 5D / r MAXPD xmm1, xmm2 / m128 66 0F 5F / r                                                              */
   /* -----------------------------------------------------------------------------------------------   */
  { "minpd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x5d, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "minpd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0x5d, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* MINPS xmm1, xmm2 / m128 NP 0F 5D / r   /r*/
    /* ----------------------------------------------------------------------------------------------- */
  { "minps",  2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x5d, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX | PFX_0xF, NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "minps",  2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						    NO_VEX, NO_EVEX, 16, 1, { 0x5d, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX | PFX_0xF, NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* MINSD xmm1, xmm2 / m64 F2 0F 5D / r  */
    /* ----------------------------------------------------------------------------------------------- */
  { "minsd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x5d, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "minsd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0x5d, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF20F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* MINSS xmm1, xmm2 / m32 F3 0F 5D / r  */
    /* ----------------------------------------------------------------------------------------------- */
  { "minss",  2, { R_XMM,  R_XMM          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX,  4,  1, { 0x5d, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, NO_IMM,     NO_MEM,     P_686 | P_SSE2, 0, NULL },
  { "minss",  2, { R_XMM,  M_ANY          }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX,  4,  1, { 0x5d, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF30F, NO_IMM,     MEM_OPND_1, P_686 | P_SSE2, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* CMPPD xmm1, xmm2 / m128, imm8 66 0F C2 / r ib  */
    /* ----------------------------------------------------------------------------------------------- */
  { "cmppd",    3, { R_XMM,   R_XMM,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY, NO_VEX, NO_EVEX, 4, 1, { 0xc2, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F, IMM_OPND_2, NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "cmppd",    3, { R_XMM,   M_ANY,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG) | IMM8_ONLY,	 NO_VEX, NO_EVEX,             4, 1, { 0xc2, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F, IMM_OPND_2, MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    //
    /* ----------------------------------------------------------------------------------------------- */
    /* AESDEC xmm1, xmm2 / m128 66 0F 38 DE / r   */
    /* ----------------------------------------------------------------------------------------------- */
  { "aesdec",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0xde, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F38  , NO_IMM,     NO_MEM,    P_686 | P_SSE3,0, NULL },
  { "aesdec",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						    NO_VEX, NO_EVEX, 16, 1, { 0xde, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F38  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE3,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* AESDECLAST xmm1, xmm2 / m128 66 0F 38 DF / r   */
    /* ----------------------------------------------------------------------------------------------- */
  { "aesdeclast",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0xdf, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0           ,0                  , (X32 | X64), REG_DST, PFX_0x66F38  , NO_IMM,     NO_MEM,    P_686 | P_SSE3,0, NULL },
  { "aesdeclast",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						    NO_VEX, NO_EVEX, 16, 1, { 0xdf, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0           ,0                  , (X32 | X64), REG_DST, PFX_0x66F38  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE3,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* AESENC xmm1, xmm2 / m128 66 0F 38 DC / r   */
    /* ----------------------------------------------------------------------------------------------- */
  { "aesenc",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0xdc, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F38  , NO_IMM,     NO_MEM,    P_686 | P_SSE3,0, NULL },
  { "aesenc",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						    NO_VEX, NO_EVEX, 16, 1, { 0xdc, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F38  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE3,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* AESENCLAST xmm1, xmm2 / m128 66 0F 38 DD / r  */
    /* ----------------------------------------------------------------------------------------------- */
  { "aesenclast",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0xdd, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0           ,0                  , (X32 | X64), REG_DST, PFX_0x66F38  , NO_IMM,     NO_MEM,    P_686 | P_SSE3,0, NULL },
  { "aesenclast",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						    NO_VEX, NO_EVEX, 16, 1, { 0xdd, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0           ,0                  , (X32 | X64), REG_DST, PFX_0x66F38  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE3,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* AESIMC xmm1, xmm2 / m128 66 0F 38 DB / r   */
    /* ----------------------------------------------------------------------------------------------- */
  { "aesimc",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0xdb, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F38  , NO_IMM,     NO_MEM,    P_686 | P_SSE3,0, NULL },
  { "aesimc",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						    NO_VEX, NO_EVEX, 16, 1, { 0xdb, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F38  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE3,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* AESKEYGENASSIST xmm1, xmm2 / m128, imm8 66 0F 3A DF / r ib  */
    /* ----------------------------------------------------------------------------------------------- */
  { "aeskeygenassist",    3, { R_XMM,   R_XMM,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY, NO_VEX, NO_EVEX, 4, 1, { 0xdf, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F3A, IMM_OPND_2, NO_MEM,    P_686 | P_SSE1,0, NULL },
  { "aeskeygenassist",    3, { R_XMM,   M_ANY,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG) | IMM8_ONLY,	             NO_VEX, NO_EVEX, 4, 1, { 0xdf, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F3A, IMM_OPND_2, MEM_OPND_1,P_686 | P_SSE1,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* ANDPD xmm1, xmm2 / m128A 66 0F 54 / r   */
    /* ----------------------------------------------------------------------------------------------- */
  { "andpd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x54, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "andpd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0x54, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* ANDPS xmm1, xmm2 / m128 NP 0F 54 / r  */
    /* ----------------------------------------------------------------------------------------------- */
  { "andps",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x54, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF  , NO_IMM,     NO_MEM,    P_686 | P_SSE1,0, NULL },
  { "andps",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 16, 1, { 0x54, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE1,0, NULL },

   /* ----------------------------------------------------------------------------------------------- */
   /* ANDNPD xmm1, xmm2 / m128 66 0F 55 / r  */
   /* ----------------------------------------------------------------------------------------------- */
  { "andnpd",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 16, 1, { 0x55, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  { "andnpd",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						    NO_VEX, NO_EVEX, 16, 1, { 0x55, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
   /* ANDNPS xmm1, xmm2 / m128 NP 0F 55 / r  */
   /* ----------------------------------------------------------------------------------------------- */
  { "andnps",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX,   16, 1, { 0x55, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF  , NO_IMM,     NO_MEM,    P_686 | P_SSE1,0, NULL },
  { "andnps",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						    NO_VEX, NO_EVEX,   16, 1, { 0x55, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE1,0, NULL },

    
    
    
  /* ----------------------------------------------------------------------------------------------- */
  /* MOVD mm, r / m32  NP 0F 6E / r   MOVD r / m32, mm NP 0F 7E / r*/ 
  /* ----------------------------------------------------------------------------------------------- */
    
    
  //{ "movd",    2, { MMX64,    M32         }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),		          NO_VEX, NO_EVEX, 4, 1, { 0x6e, 0x00, 0x00 }, 4,  1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF,  NO_IMM, MEM_OPND_1,P_686 | P_SSE1,0, NULL },
  //{ "movd",    2, { MMX64,    R32         }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM), NO_VEX, NO_EVEX, 4, 1, { 0x6e, 0x00, 0x00 }, 4,  1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  //{ "movd",    2, { R32,      MMX64       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 4, 1, { 0x28, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0xF  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE1,0, NULL },
  //{ "movd",    2, { M_ANY,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 4, 1, { 0x29, 0x00, 0x00 }, 16, 1, MOD_MEM_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,  PFX_0xF  , NO_IMM,     MEM_OPND_0,P_686 | P_SSE1,0, NULL },
  //{ "movd",    2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM), NO_VEX, NO_EVEX, 8, 1, { 0x28, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     NO_MEM,    P_686 | P_SSE2,0, NULL },
  //{ "movd",    2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 8, 1, { 0x28, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE2,0, NULL },
  //{ "movd",    2, { M_ANY,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 8, 1, { 0x29, 0x00, 0x00 }, 16, 1, MOD_MEM_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,  PFX_0x66F  , NO_IMM,     MEM_OPND_0,P_686 | P_SSE2,0, NULL },



  { "blendps",   3, { R_XMM,   R_XMM,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY, NO_VEX, NO_EVEX, 4, 1, { 0x0c, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F3A  , IMM_OPND_2, NO_MEM,    P_686 | P_SSE4,0, NULL },
  { "blendps",   3, { R_XMM,   M_ANY,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG) | IMM8_ONLY,	NO_VEX, NO_EVEX, 4, 1, { 0x0c, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F3A  , IMM_OPND_2, MEM_OPND_1,P_686 | P_SSE4,0, NULL },
  { "blendpd",   3, { R_XMM,   R_XMM,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY, NO_VEX, NO_EVEX, 2, 1, { 0x0d, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F3A  , IMM_OPND_2, NO_MEM,    P_686 | P_SSE4,0, NULL },
  { "blendpd",   3, { R_XMM,   M_ANY,  IMM8 }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG) | IMM8_ONLY,	NO_VEX, NO_EVEX, 2, 1, { 0x0d, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F3A  , IMM_OPND_2, MEM_OPND_1,P_686 | P_SSE4,0, NULL },

  { "blendvps",  2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM), NO_VEX, NO_EVEX, 4, 1, { 0x14, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F38  , NO_IMM,     NO_MEM,    P_686 | P_SSE4,0, NULL },
	{ "blendvps",  2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 4, 1, { 0x14, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F38  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE4,0, NULL },
  { "blendvpd",  2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 8, 1, { 0x15, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F38  , NO_IMM,     NO_MEM,    P_686 | P_SSE4,0, NULL },
  { "blendvpd",  2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 8, 1, { 0x15, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F38  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE4,0, NULL },
  { "mpsadbw",   2, { R_XMM,    R_XMM       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG | F_MODRM_RM),	NO_VEX, NO_EVEX, 4, 1, { 0x42, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F3A  , NO_IMM,     NO_MEM,    P_686 | P_SSE4,0, NULL },
	{ "mpsadbw",   2, { R_XMM,    M_ANY       }, SSE0, (EREX) | (F_MODRM | F_MODRM_REG),						  NO_VEX, NO_EVEX, 4, 1, { 0x42, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, PFX_0x66F3A  , NO_IMM,     MEM_OPND_1,P_686 | P_SSE4,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* VMOVD */
    /* ----------------------------------------------------------------------------------------------- 
    VMOVD xmm1, r32/m32	VEX.128.66.0F.W0 6E / 
    VMOVD r32/m32, xmm1	VEX.128.66.0F.W0 7E /r
    VMOVD xmm1, r32/m32	EVEX.128.66.0F.W0 6E /r
    VMOVD r32/m32, xmm1	EVEX.128.66.0F.W0 7E /r
    */
  { "vmovd", 2, { R_XMM,   R32_EAX                 }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),  (VEX | VEX_66 | VEX_W0 | VEX_0F | VEX_2OPND | EVEX),           (EVEX_W0),			       1, 1, { 0x6e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovd", 2, { R_XMM,   R32_ECX                 }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),  (VEX | VEX_66 | VEX_W0 | VEX_0F | VEX_2OPND | EVEX),           (EVEX_W0),			       1, 1, { 0x6e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovd", 2, { R_XMM,   R32                     }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),  (VEX | VEX_66 | VEX_W0 | VEX_0F | VEX_2OPND | EVEX),           (EVEX_W0),			       1, 1, { 0x6e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovd", 2, { R_XMM,   M32                     }, AVX0, (F_MODRM | F_MODRM_REG),						   (VEX | VEX_66 | VEX_W0 | VEX_0F | VEX_2OPND | EVEX),           (EVEX_W0),             1, 1, { 0x6e, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     MEM_OPND_1, P_686 | P_AVX, 0, NULL },
  { "vmovd", 2, { M32,     R_XMM                   }, AVX0, (F_MODRM | F_MODRM_REG),						   (VEX | VEX_66 | VEX_W0 | VEX_0F | VEX_2OPND | EVEX),	          (EVEX_W0),             1, 1, { 0x7e, 0x00, 0x00 }, 16, 1, MOD_MEM_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,   NO_PREFIX, NO_IMM,     MEM_OPND_0, P_686 | P_AVX, 0, NULL },
  { "vmovd", 2, { R32,     R_XMM                   }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),	 (VEX | VEX_66 | VEX_W0 | VEX_0F | VEX_2OPND | EVEX),           (EVEX_W0),             1, 1, { 0x7e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,   NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovd", 2, { R32_EAX, R_XMM                   }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),	 (VEX | VEX_66 | VEX_W0 | VEX_0F | VEX_2OPND | EVEX),           (EVEX_W0),             1, 1, { 0x7e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,   NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovd", 2, { R32_ECX, R_XMM                   }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),	 (VEX | VEX_66 | VEX_W0 | VEX_0F | VEX_2OPND | EVEX),           (EVEX_W0),             1, 1, { 0x7e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,   NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VMOVQ */
    /* -----------------------------------------------------------------------------------------------
    VMOVQ xmm1, r64/m64	VEX.128.66.0F.W1 6E /r
    VMOVQ r64/m64, xmm1	VEX.128.66.0F.W1 7E /r
    VMOVQ xmm1, r64/m64	EVEX.128.66.0F.W1 6E /r
    VMOVQ r64/m64, xmm1	EVEX.128.66.0F.W1 7E /r
    */
  { "vmovq", 2, { R_XMM,   R64_RAX                 }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),  (VEX | VEX_66 | VEX_W1 | VEX_0F | VEX_2OPND | EVEX),           (EVEX_W1),			       1, 1, { 0x6e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovq", 2, { R_XMM,   R64_RCX                 }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),  (VEX | VEX_66 | VEX_W1 | VEX_0F | VEX_2OPND | EVEX),           (EVEX_W1),			       1, 1, { 0x6e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovq", 2, { R_XMM,   R64                     }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),  (VEX | VEX_66 | VEX_W1 | VEX_0F | VEX_2OPND | EVEX),           (EVEX_W1),			       1, 1, { 0x6e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovq", 2, { R_XMM,   M64                     }, AVX0, (F_MODRM | F_MODRM_REG),						   (VEX | VEX_66 | VEX_W1 | VEX_0F | VEX_2OPND | EVEX),           (EVEX_W1),             1, 1, { 0x6e, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     MEM_OPND_1, P_686 | P_AVX, 0, NULL },
  { "vmovq", 2, { M64,     R_XMM                   }, AVX0, (F_MODRM | F_MODRM_REG),						   (VEX | VEX_66 | VEX_W1 | VEX_0F | VEX_2OPND | EVEX),	          (EVEX_W1),             1, 1, { 0x7e, 0x00, 0x00 }, 16, 1, MOD_MEM_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,   NO_PREFIX, NO_IMM,     MEM_OPND_0, P_686 | P_AVX, 0, NULL },
  { "vmovq", 2, { R64,     R_XMM                   }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),	 (VEX | VEX_66 | VEX_W1 | VEX_0F | VEX_2OPND | EVEX),           (EVEX_W1),             1, 1, { 0x7e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,   NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovq", 2, { R64_RAX, R_XMM                   }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),	 (VEX | VEX_66 | VEX_W1 | VEX_0F | VEX_2OPND | EVEX),           (EVEX_W1),             1, 1, { 0x7e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,   NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovq", 2, { R64_RCX, R_XMM                   }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),	 (VEX | VEX_66 | VEX_W1 | VEX_0F | VEX_2OPND | EVEX),           (EVEX_W1),             1, 1, { 0x7e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,   NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovq", 2, { R_XMM, R_XMM                     }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),	 (VEX | VEX_F3 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),          (EVEX_W1),             1, 1, { 0x7e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                 , (X32 | X64), REG_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
   /* ----------------------------------------------------------------------------------------------- */
   /* VHADDPD */
   /* ----------------------------------------------------------------------------------------------- */
  { "vhaddpd",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS),            (NO_EVEX),             2,  1, { 0x7c, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vhaddpd",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS),            (NO_EVEX),             2,  1, { 0x7c, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vhaddpd",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS),            (NO_EVEX),             4,  1, { 0x7c, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vhaddpd",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS),            (NO_EVEX),             4,  1, { 0x7c, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vhaddpd",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),        (NO_EVEX),             2,  1, { 0x7c, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vhaddpd",  2, { R_YMM,  R_YMM                    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),        (NO_EVEX),             4,  1, { 0x7c, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* VHADDPS */
    /* ----------------------------------------------------------------------------------------------- */
  { "vhaddps",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_F2 | VEX_WIG | VEX_0F | VEX_NDS | EVEX),              (NO_EVEX),             4,  1, { 0x58, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vhaddps",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_F2 | VEX_WIG | VEX_0F | VEX_NDS | EVEX),              (NO_EVEX),             4,  1, { 0x58, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vhaddps",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_F2 | VEX_WIG | VEX_0F | VEX_NDS | EVEX),              (NO_EVEX),             8,  1, { 0x58, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vhaddps",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_F2 | VEX_WIG | VEX_0F | VEX_NDS | EVEX),              (NO_EVEX),             8,  1, { 0x58, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vhaddps",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_F2 | VEX_WIG | VEX_0F | VEX_DUP_NDS),                 (NO_EVEX),             4,  1, { 0x58, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vhaddps",  2, { R_YMM,  R_YMM                    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_F2 | VEX_WIG | VEX_0F | VEX_DUP_NDS),                 (NO_EVEX),             8,  1, { 0x58, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
   /* VADDPD */
   /* -----------------------------------------------------------------------------------------------
    VADDPD xmm1, xmm2, xmm3 / m128  VEX.128.66.0F.WIG 58 / r
    VADDPD ymm1, ymm2, ymm3 / m256  VEX.256.66.0F.WIG 58 / r
    VADDPD xmm1{ k1 }{z}, xmm2, xmm3 / m128 / m64bcst EVEX.128.66.0F.W1 58 / r
    VADDPD ymm1{ k1 }{z}, ymm2, ymm3 / m256 / m64bcst EVEX.256.66.0F.W1 58 / r
    VADDPD zmm1{ k1 }{z}, zmm2, zmm3 / m512 / m64bcst{ er }EVEX.512.66.0F.W1 58 / r
    */
  { "vaddpd",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x58, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddpd",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD),             2,  1, { 0x58, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vaddpd",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x58, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddpd",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x58, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vaddpd",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x58, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddpd",  2, { R_YMM,  R_YMM                    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x58, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddpd",  3, { R_ZMM,  R_ZMM, R_ZMM             }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (EVEX | VEX_66 | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND), 8, 1, { 0x58, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddpd",  3, { R_ZMM,  R_ZMM, M_ANY             }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD), 8, 1, { 0x58, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VADDPS */
    /* ----------------------------------------------------------------------------------------------- */
  { "vaddps",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x58, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddps",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x58, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vaddps",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             8,  1, { 0x58, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddps",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             8,  1, { 0x58, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vaddps",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x58, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddps",  2, { R_YMM,  R_YMM                    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             8,  1, { 0x58, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddps",  3, { R_ZMM,  R_ZMM, R_ZMM             }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (EVEX | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND), 16, 1, { 0x58, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddps",  3, { R_ZMM,  R_ZMM, M_ANY             }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD), 16, 1, { 0x58, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* VADDSD xmm1 {k1}{z}, xmm2,xmm3/m64 {er} EVEX.LIG.F2.0F.W1 59 /r*/
    /* ----------------------------------------------------------------------------------------------- */
  { "vaddsd",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_LIG | VEX_WIG | VEX_F2 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x58, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddsd",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_LIG | VEX_WIG | VEX_F2 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x58, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vaddsd",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_LIG | VEX_WIG | VEX_F2 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),               2,  1, { 0x58, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
      /* VADDSS */
      /* ----------------------------------------------------------------------------------------------- */
  { "vaddss",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_LIG | VEX_WIG | VEX_F3 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x58, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddss",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_LIG | VEX_WIG | VEX_F3 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x58, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vaddss",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_LIG | VEX_WIG | VEX_F3 | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),                 4,  1, { 0x58, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
   /* VSUBPD */
   /* -----------------------------------------------------------------------------------------------
    */
  { "vsubpd",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5c, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vsubpd",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD),             2,  1, { 0x5c, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vsubpd",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5c, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vsubpd",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x5c, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vsubpd",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),                 2,  1, { 0x5c, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vsubpd",  2, { R_YMM,  R_YMM                    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),                 4,  1, { 0x5c, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vsubpd",  3, { R_ZMM,  R_ZMM, R_ZMM             }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (EVEX | VEX_66 | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND), 8,  1, { 0x5c, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vsubpd",  3, { R_ZMM,  R_ZMM, M_ANY             }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD), 8,  1, { 0x5c, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VSUBPS */
    /* ----------------------------------------------------------------------------------------------- */
  { "vsubps",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5c, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vsubps",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x5c, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vsubps",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             8,  1, { 0x5c, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vsubps",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             8,  1, { 0x5c, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vsubps",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),                 4,  1, { 0x5c, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vsubps",  2, { R_YMM,  R_YMM                    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),                 8,  1, { 0x5c, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vsubps",  3, { R_ZMM,  R_ZMM, R_ZMM             }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (EVEX | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND), 16, 1, { 0x5c, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vsubps",  3, { R_ZMM,  R_ZMM, M_ANY             }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD), 16, 1, { 0x5c, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* VSUBSD xmm1 {k1}{z}, xmm2,xmm3/m64 {er} EVEX.LIG.F2.0F.W1 59 /r*/
    /* ----------------------------------------------------------------------------------------------- */
  { "vsubsd",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_LIG | VEX_F2 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5c, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vsubsd",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_LIG | VEX_F2 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5c, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vsubsd",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_LIG | VEX_F2 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),               2,  1, { 0x5c, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VSUBSS */
    /* ----------------------------------------------------------------------------------------------- */
  { "vsubss",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_LIG | VEX_F3 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5c, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vsubss",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_LIG | VEX_F3 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x5c, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vaddss",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_LIG | VEX_F3 | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),                 4,  1, { 0x5c, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
    
   /* ----------------------------------------------------------------------------------------------- */
   /*    VADDSUBPD xmm1, xmm2, xmm3 / m128 VEX.128.66.0F.WIG D0 / r                                   */ 
   /*    VADDSUBPD ymm1, ymm2, ymm3 / m256 VEX.256.66.0F.WIG D0 / r                                   */
   /* ----------------------------------------------------------------------------------------------- */
    
  { "vaddsubpd",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS),            (NO_EVEX),             2,  1, { 0xd0, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddsubpd",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS),            (NO_EVEX),             2,  1, { 0xd0, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vaddsubpd",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS),            (NO_EVEX),             4,  1, { 0xd0, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddsubpd",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS),            (NO_EVEX),             4,  1, { 0xd0, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vaddsubpd",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),        (NO_EVEX),             2,  1, { 0xd0, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddsubpd",  2, { R_YMM,  R_YMM                    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),        (NO_EVEX),             4,  1, { 0xd0, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /*    VADDSUBPS xmm1, xmm2, xmm3 / m128 VEX.128.F2.0F.WIG D0 / r                                 */
    /*    VADDSUBPS ymm1, ymm2, ymm3 / m256 VEX.256.F2.0F.WIG D0 / r                                 */
    /* ----------------------------------------------------------------------------------------------- */
  { "vaddsubps",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_F2 | VEX_0F | VEX_NDS),            (NO_EVEX),             2,  1, { 0xd0, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddsubps",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_F2 | VEX_0F | VEX_NDS),            (NO_EVEX),             2,  1, { 0xd0, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vaddsubps",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_F2 | VEX_0F | VEX_NDS),            (NO_EVEX),             4,  1, { 0xd0, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddsubps",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_F2 | VEX_0F | VEX_NDS),            (NO_EVEX),             4,  1, { 0xd0, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vaddsubps",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_F2 | VEX_0F | VEX_DUP_NDS),        (NO_EVEX),             2,  1, { 0xd0, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vaddsubps",  2, { R_YMM,  R_YMM                    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_F2 | VEX_0F | VEX_DUP_NDS),        (NO_EVEX),             4,  1, { 0xd0, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
	/* VMULPS */
	/* ----------------------------------------------------------------------------------------------- */
	{ "vmulps",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x59, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
	{ "vmulps",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x59, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
	{ "vmulps",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             8,  1, { 0x59, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
	{ "vmulps",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             8,  1, { 0x59, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
		/* special implicit NDS forms */																														         
		{ "vmulps",  2, { R_XMM,  R_XMM                }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),                (VEX | VEX_WIG | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x59, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
		{ "vmulps",  2, { R_YMM,  R_YMM                }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),                (VEX | VEX_WIG | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             8,  1, { 0x59, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
	{ "vmulps",  3, { R_ZMM,  R_ZMM, R_ZMM             }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (EVEX | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND), 16, 1, { 0x59, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
	{ "vmulps",  3, { R_ZMM,  R_ZMM, M_ANY             }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD), 16, 1, { 0x59, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
	/* VMULPD */
	/* ----------------------------------------------------------------------------------------------- */
	{ "vmulpd",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x59, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
	{ "vmulpd",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD),             2,  1, { 0x59, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
	{ "vmulpd",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x59, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
	{ "vmulpd",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x59, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
		/* special implicit NDS forms */
		{ "vmulpd",  2, { R_XMM,  R_XMM                  }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x59, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
		{ "vmulpd",  2, { R_YMM,  R_YMM                  }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x59, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
	{ "vmulpd",  3, { R_ZMM,  R_ZMM, R_ZMM             }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (EVEX | VEX_66 | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND), 8, 1, { 0x59, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
	{ "vmulpd",  3, { R_ZMM,  R_ZMM, M_ANY             }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD), 8, 1, { 0x59, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VMULSD xmm1 {k1}{z}, xmm2,xmm3/m64 {er} EVEX.LIG.F2.0F.W1 59 /r*/
    /* ----------------------------------------------------------------------------------------------- */
	{ "vmulsd",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_LIG | VEX_F2 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x59, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmulsd",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_LIG | VEX_F2 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x59, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vmulsd",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_LIG | VEX_F2 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),               2,  1, { 0x59, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
    
	/* ----------------------------------------------------------------------------------------------- */
    /* VMULSS */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vmulss",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_LIG | VEX_F3 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x59, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmulss",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_LIG | VEX_F3 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x59, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vmulss",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_LIG | VEX_F3 | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x59, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
        
  /* ----------------------------------------------------------------------------------------------- */
  /* VDIVPS */
  /* ----------------------------------------------------------------------------------------------- */
  { "vdivps",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5e, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vdivps",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x5e, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vdivps",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             8,  1, { 0x5e, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vdivps",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             8,  1, { 0x5e, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vdivps",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vdivps",  2, { R_YMM,  R_YMM                    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             8,  1, { 0x5e, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vdivps",  3, { R_ZMM,  R_ZMM, R_ZMM             }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (EVEX | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND), 16, 1, { 0x5e, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vdivps",  3, { R_ZMM,  R_ZMM, M_ANY             }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD), 16, 1, { 0x5e, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VDIVPD */
    /* ----------------------------------------------------------------------------------------------- */
  { "vdivpd",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5e, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vdivpd",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD),             2,  1, { 0x5e, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vdivpd",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5e, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vdivpd",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x5e, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vdivpd",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vdivpd",  2, { R_YMM,  R_YMM                    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5e, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vdivpd",  3, { R_ZMM,  R_ZMM, R_ZMM             }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (EVEX | VEX_66 | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND), 8,  1, { 0x5e, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vdivpd",  3, { R_ZMM,  R_ZMM, M_ANY             }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD), 8,  1, { 0x5e, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VDIVSD xmm1 {k1}{z}, xmm2,xmm3/m64 {er} EVEX.LIG.F2.0F.W1 59 /r*/
    /* ----------------------------------------------------------------------------------------------- */
  { "vdivsd",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_LIG | VEX_F2 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5e, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vdivsd",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_LIG | VEX_F2 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5e, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vdivsd",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_LIG | VEX_F2 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),           2,  1, { 0x5e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
      /* VDIVSS */
      /* ----------------------------------------------------------------------------------------------- */
  { "vdivss",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_LIG | VEX_F3 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5e, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vdivss",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_LIG | VEX_F3 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x5e, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vdivss",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_LIG | VEX_F3 | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5e, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* VMAXPD */
    /* ----------------------------------------------------------------------------------------------- */
  { "vmaxpd",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5f, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmaxpd",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD),             2,  1, { 0x5f, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vmaxpd",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5f, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmaxpd",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x5f, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vmaxpd",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5f, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmaxpd",  2, { R_YMM,  R_YMM                    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5f, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmaxpd",  3, { R_ZMM,  R_ZMM, R_ZMM             }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (EVEX | VEX_66 | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND), 8,  1, { 0x5f, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmaxpd",  3, { R_ZMM,  R_ZMM, M_ANY             }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD), 8,  1, { 0x5f, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* VMAXPS */
    /* ----------------------------------------------------------------------------------------------- */
  { "vmaxps",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5f, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmaxps",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x5f, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vmaxps",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             8,  1, { 0x5f, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmaxps",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             8,  1, { 0x5f, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vmaxps",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5f, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmaxps",  2, { R_YMM,  R_YMM                    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             8,  1, { 0x5f, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmaxps",  3, { R_ZMM,  R_ZMM, R_ZMM             }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (EVEX | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND), 16, 1, { 0x5f, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmaxps",  3, { R_ZMM,  R_ZMM, M_ANY             }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD), 16, 1, { 0x5f, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* VMAXSD xmm1, xmm2, xmm3 / m64 VEX.LIG.F2.0F.WIG 5F / r                                          */
    /* VMAXSD xmm1{ k1 }{z}, xmm2, xmm3 / m64{ sae } EVEX.LIG.F2.0F.W1 5F / r                          */
    /* ----------------------------------------------------------------------------------------------- */
  { "vmaxsd",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_LIG | VEX_WIG | VEX_F2 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5f, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmaxsd",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_LIG | VEX_WIG | VEX_F2 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5f, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vmaxsd",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_LIG | VEX_WIG | VEX_F2 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5f, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
      /* VMAXSS */
      /* ----------------------------------------------------------------------------------------------- */
  { "vmaxss",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_LIG | VEX_WIG | VEX_F3 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5f, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmaxss",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_LIG | VEX_WIG | VEX_F3 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x5f, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vmaxss",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_LIG | VEX_WIG | VEX_F3 | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5f, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },

    
   /* ----------------------------------------------------------------------------------------------- */
   /* VMINPD */
   /* ----------------------------------------------------------------------------------------------- */
  { "vminpd",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5d, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vminpd",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD),             2,  1, { 0x5d, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vminpd",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5d, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vminpd",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x5d, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vminpd",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5d, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vminpd",  2, { R_YMM,  R_YMM                    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_66 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5d, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vminpd",  3, { R_ZMM,  R_ZMM, R_ZMM             }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (EVEX | VEX_66 | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND), 8,  1, { 0x5d, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vminpd",  3, { R_ZMM,  R_ZMM, M_ANY             }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_BRD), 8,  1, { 0x5d, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },       
    /* ----------------------------------------------------------------------------------------------- */
    /* VMINPS */
    /* ----------------------------------------------------------------------------------------------- */
  { "vminps",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5d, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vminps",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x5d, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vminps",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             8,  1, { 0x5d, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vminps",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_WIG | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             8,  1, { 0x5d, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vminps",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5d, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vminps",  2, { R_YMM,  R_YMM                    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_WIG | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             8,  1, { 0x5d, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vminps",  3, { R_ZMM,  R_ZMM, R_ZMM             }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (EVEX | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND), 16, 1, { 0x5d, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vminps",  3, { R_ZMM,  R_ZMM, M_ANY             }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_0F | VEX_NDS),                            (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD), 16, 1, { 0x5d, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* VMINSD xmm1, xmm2, xmm3 / m64 VEX.LIG.F2.0F.WIG 5D / r                                          */
    /* VMINSD xmm1{ k1 }{z}, xmm2, xmm3 / m64{ sae } EVEX.LIG.F2.0F.W1 5D / r                          */
    /* ----------------------------------------------------------------------------------------------- */
  { "vminsd",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_LIG | VEX_WIG | VEX_F2 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5d, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vminsd",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_LIG | VEX_WIG | VEX_F2 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5d, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vminsd",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_LIG | VEX_WIG | VEX_F2 | VEX_0F | VEX_DUP_NDS),               (EVEX_W1 | EVEX_MASK | EVEX_Z | EVEX_RND),             2,  1, { 0x5d, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
      /* VMINSS */
      /* ----------------------------------------------------------------------------------------------- */
  { "vminss",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_LIG | VEX_WIG | VEX_F3 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5d, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vminss",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_LIG | VEX_WIG | VEX_F3 | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x5d, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    /* special implicit NDS forms */
  { "vminss",  2, { R_XMM,  R_XMM                    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_LIG | VEX_WIG | VEX_F3 | VEX_0F | VEX_DUP_NDS),               (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_RND),             4,  1, { 0x5d, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
    
    /* ----------------------------------------------------------------------------------------------- */
    /* VMOVAPS */
    /* ----------------------------------------------------------------------------------------------- */
  { "vmovaps", 2, { R_XMM,   R_XMM                   }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | (SRCHDSTL),  (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),          (EVEX_W0 | EVEX_MASK | EVEX_Z),			       1, 1, { 0x29, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovaps", 2, { R_YMM,   R_YMM                   }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | (SRCHDSTL),  (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),          (EVEX_W0 | EVEX_MASK | EVEX_Z),			       1, 1, { 0x29, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovaps", 2, { R_XMM,   R_XMM                   }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),			          (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),          (EVEX_W0 | EVEX_MASK | EVEX_Z),             1, 1, { 0x28, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovaps", 2, { R_YMM,   R_YMM                   }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),			          (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),          (EVEX_W0 | EVEX_MASK | EVEX_Z),             1, 1, { 0x28, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovaps", 2, { R_XMM,   M_ANY                   }, AVX0, (F_MODRM | F_MODRM_REG),						                (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),          (EVEX_W0 | EVEX_MASK | EVEX_Z),             1, 1, { 0x28, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_1, P_686 | P_AVX, 0, NULL },
  { "vmovaps", 2, { R_YMM,   M_ANY                   }, AVX1, (F_MODRM | F_MODRM_REG),						                (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),          (EVEX_W0 | EVEX_MASK | EVEX_Z),             1, 1, { 0x28, 0x00, 0x00 }, 32, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_1, P_686 | P_AVX, 0, NULL },
  { "vmovaps", 2, { M_ANY,   R_XMM                   }, AVX0, (F_MODRM | F_MODRM_REG),						                (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),	         (EVEX_W0 | EVEX_MASK),                      1, 1, { 0x29, 0x00, 0x00 }, 16, 1, MOD_MEM_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     MEM_OPND_0, P_686 | P_AVX, 0, NULL },
  { "vmovaps", 2, { M_ANY,   R_YMM                   }, AVX1, (F_MODRM | F_MODRM_REG),						                (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),	         (EVEX_W0 | EVEX_MASK),                      1, 1, { 0x29, 0x00, 0x00 }, 32, 1, MOD_MEM_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     MEM_OPND_0, P_686 | P_AVX, 0, NULL },
  { "vmovaps", 2, { R_ZMM,   R_ZMM                   }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),			          (EVEX | VEX_66 | VEX_0F | VEX_2OPND),					                 (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z), 1, 1, { 0x28, 0x00, 0x00 }, 64, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovaps", 2, { R_ZMM,   M_ANY                   }, EVX0, (F_MODRM | F_MODRM_REG),						                (EVEX | VEX_66 | VEX_0F | VEX_2OPND),					                 (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z), 1, 1, { 0x28, 0x00, 0x00 }, 64, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_1, P_686 | P_AVX, 0, NULL },
  { "vmovaps", 2, { M_ANY,   R_ZMM                   }, EVX0, (F_MODRM | F_MODRM_REG),						                (EVEX | VEX_0F | VEX_2OPND),					                         (EVEX_ONLY | EVEX_W0 | EVEX_MASK),          1, 1, { 0x29, 0x00, 0x00 }, 64, 1, MOD_MEM_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     MEM_OPND_0, P_686 | P_AVX, 0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VMOVAPD */
    /* ----------------------------------------------------------------------------------------------- */
  { "vmovapd", 2, { R_XMM,   R_XMM                   }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | (SRCHDSTL),  (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),          (EVEX_W1 | EVEX_MASK | EVEX_Z),			       1, 1, { 0x29, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovapd", 2, { R_YMM,   R_YMM                   }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | (SRCHDSTL),  (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),          (EVEX_W1 | EVEX_MASK | EVEX_Z),			       1, 1, { 0x29, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovapd", 2, { R_XMM,   R_XMM                   }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),			          (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),          (EVEX_W1 | EVEX_MASK | EVEX_Z),             1, 1, { 0x28, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovapd", 2, { R_YMM,   R_YMM                   }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),			          (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),          (EVEX_W1 | EVEX_MASK | EVEX_Z),             1, 1, { 0x28, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovapd", 2, { R_XMM,   M_ANY                   }, AVX0, (F_MODRM | F_MODRM_REG),						                (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),          (EVEX_W1 | EVEX_MASK | EVEX_Z),             1, 1, { 0x28, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_1, P_686 | P_AVX, 0, NULL },
  { "vmovapd", 2, { R_YMM,   M_ANY                   }, AVX1, (F_MODRM | F_MODRM_REG),						                (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),          (EVEX_W1 | EVEX_MASK | EVEX_Z),             1, 1, { 0x28, 0x00, 0x00 }, 32, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_1, P_686 | P_AVX, 0, NULL },
  { "vmovapd", 2, { M_ANY,   R_XMM                   }, AVX0, (F_MODRM | F_MODRM_REG),						                (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),	         (EVEX_W1 | EVEX_MASK),                      1, 1, { 0x29, 0x00, 0x00 }, 16, 1, MOD_MEM_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     MEM_OPND_0, P_686 | P_AVX, 0, NULL },
  { "vmovapd", 2, { M_ANY,   R_YMM                   }, AVX1, (F_MODRM | F_MODRM_REG),						                (VEX | VEX_66 | VEX_WIG | VEX_0F | VEX_2OPND | EVEX),	         (EVEX_W1 | EVEX_MASK),                      1, 1, { 0x29, 0x00, 0x00 }, 32, 1, MOD_MEM_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     MEM_OPND_0, P_686 | P_AVX, 0, NULL },
  { "vmovapd", 2, { R_ZMM,   R_ZMM                   }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),			          (EVEX | VEX_66 | VEX_0F | VEX_2OPND),					                 (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_Z), 1, 1, { 0x28, 0x00, 0x00 }, 64, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vmovapd", 2, { R_ZMM,   M_ANY                   }, EVX0, (F_MODRM | F_MODRM_REG),						                (EVEX | VEX_66 | VEX_0F | VEX_2OPND),					                 (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_Z), 1, 1, { 0x28, 0x00, 0x00 }, 64, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_1, P_686 | P_AVX, 0, NULL },
  { "vmovapd", 2, { M_ANY,   R_ZMM                   }, EVX0, (F_MODRM | F_MODRM_REG),						                (EVEX | VEX_66 | VEX_0F | VEX_2OPND),					                 (EVEX_ONLY | EVEX_W1 | EVEX_MASK),          1, 1, { 0x29, 0x00, 0x00 }, 64, 1, MOD_MEM_REG, 0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM,     MEM_OPND_0, P_686 | P_AVX, 0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
	/* VPSHUFD */
	/* ----------------------------------------------------------------------------------------------- */
	{ "vpshufd",    3, { R_XMM,  R_XMM,  IMM8          }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_WIG | VEX_0F | VEX_66 | VEX_2OPND | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z),                        4,  1, { 0x70, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, NO_MEM,    P_686 | P_AVX,0, NULL },
	{ "vpshufd",    3, { R_XMM,  M_ANY,  IMM8          }, AVX0, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_WIG | VEX_0F | VEX_66 | VEX_2OPND | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x70, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, MEM_OPND_1,P_686 | P_AVX,0, NULL },
	{ "vpshufd",    3, { R_YMM,  R_YMM,  IMM8          }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_WIG | VEX_0F | VEX_66 | VEX_2OPND | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z),                        8,  1, { 0x70, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, NO_MEM,    P_686 | P_AVX,0, NULL },
	{ "vpshufd",    3, { R_YMM,  M_ANY,  IMM8          }, AVX1, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_WIG | VEX_0F | VEX_66 | VEX_2OPND | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             8,  1, { 0x70, 0x00, 0x00 }, 32, 1, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, MEM_OPND_1,P_686 | P_AVX,0, NULL },
	{ "vpshufd",    3, { R_ZMM,  R_ZMM,  IMM8          }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_WIG | VEX_0F | VEX_66 | VEX_2OPND | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z),            16, 1, { 0x70, 0x00, 0x00 }, 64, 1, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, NO_MEM,    P_686 | P_AVX,0, NULL },
	{ "vpshufd",    3, { R_ZMM,  M_ANY,  IMM8          }, EVX0, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_WIG | VEX_0F | VEX_66 | VEX_2OPND | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD), 16, 1, { 0x70, 0x00, 0x00 }, 64, 1, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, MEM_OPND_1,P_686 | P_AVX,0, NULL },
    
	/* ----------------------------------------------------------------------------------------------- */
    /* VPSHUFHW */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vpshufhw",    3, { R_XMM,  R_XMM,  IMM8         }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_WIG | VEX_F3 | VEX_0F | VEX_2OPND | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z),                        8,  1, { 0x70, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, NO_MEM,    P_686 | P_AVX,0, NULL },
	{ "vpshufhw",    3, { R_XMM,  M_ANY,  IMM8         }, AVX0, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_WIG | VEX_F3 | VEX_0F | VEX_2OPND | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             8,  1, { 0x70, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, MEM_OPND_1,P_686 | P_AVX,0, NULL },
	{ "vpshufhw",    3, { R_YMM,  R_YMM,  IMM8         }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_WIG | VEX_F3 | VEX_0F | VEX_2OPND | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z),                        16, 1, { 0x70, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, NO_MEM,    P_686 | P_AVX,0, NULL },
	{ "vpshufhw",    3, { R_YMM,  M_ANY,  IMM8         }, AVX1, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_WIG | VEX_F3 | VEX_0F | VEX_2OPND | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             16, 1, { 0x70, 0x00, 0x00 }, 32, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, MEM_OPND_1,P_686 | P_AVX,0, NULL },
	{ "vpshufhw",    3, { R_ZMM,  R_ZMM,  IMM8         }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_WIG | VEX_F3 | VEX_0F | VEX_2OPND | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z),            32, 1, { 0x70, 0x00, 0x00 }, 64, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, NO_MEM,    P_686 | P_AVX,0, NULL },
	{ "vpshufhw",    3, { R_ZMM,  M_ANY,  IMM8         }, EVX0, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_WIG | VEX_F3 | VEX_0F | VEX_2OPND | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD), 32, 1, { 0x70, 0x00, 0x00 }, 64, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, MEM_OPND_1,P_686 | P_AVX,0, NULL },
    
	/* ----------------------------------------------------------------------------------------------- */
    /* VPSHUFLW */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vpshuflw",    3, { R_XMM,  R_XMM,  IMM8         }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_WIG | VEX_F2 | VEX_0F | VEX_2OPND | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z),                        8,  1, { 0x70, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, NO_MEM,    P_686 | P_AVX,0, NULL },
	{ "vpshuflw",    3, { R_XMM,  M_ANY,  IMM8         }, AVX0, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_WIG | VEX_F2 | VEX_0F | VEX_2OPND | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             8,  1, { 0x70, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, MEM_OPND_1,P_686 | P_AVX,0, NULL },
	{ "vpshuflw",    3, { R_YMM,  R_YMM,  IMM8         }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_WIG | VEX_F2 | VEX_0F | VEX_2OPND | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z),                        16, 1, { 0x70, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, NO_MEM,    P_686 | P_AVX,0, NULL },
	{ "vpshuflw",    3, { R_YMM,  M_ANY,  IMM8         }, AVX1, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_WIG | VEX_F2 | VEX_0F | VEX_2OPND | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             16, 1, { 0x70, 0x00, 0x00 }, 32, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, MEM_OPND_1,P_686 | P_AVX,0, NULL },
	{ "vpshuflw",    3, { R_ZMM,  R_ZMM,  IMM8         }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_WIG | VEX_F2 | VEX_0F | VEX_2OPND | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z),            32, 1, { 0x70, 0x00, 0x00 }, 64, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, NO_MEM,    P_686 | P_AVX,0, NULL },
	{ "vpshuflw",    3, { R_ZMM,  M_ANY,  IMM8         }, EVX0, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_WIG | VEX_F2 | VEX_0F | VEX_2OPND | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD), 32, 1, { 0x70, 0x00, 0x00 }, 64, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, MEM_OPND_1,P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VPSHUFB */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vpshufb",    3, { R_XMM,  R_XMM,  R_XMM         }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),  (VEX | VEX_WIG | VEX_66 | VEX_NDS | VEX_0F38 | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z),                        8,  1, { 0x00, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,    P_686 | P_AVX,0, NULL },
	{ "vpshufb",    3, { R_XMM,  R_XMM,  M_ANY         }, AVX0, (F_MODRM | F_MODRM_REG),               (VEX | VEX_WIG | VEX_66 | VEX_NDS | VEX_0F38 | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             8,  1, { 0x00, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,P_686 | P_AVX,0, NULL },
	{ "vpshufb",    3, { R_YMM,  R_YMM,  R_YMM         }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),  (VEX | VEX_WIG | VEX_66 | VEX_NDS | VEX_0F38 | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z),                        16, 1, { 0x00, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,    P_686 | P_AVX,0, NULL },
	{ "vpshufb",    3, { R_YMM,  R_YMM,  M_ANY         }, AVX1, (F_MODRM | F_MODRM_REG),               (VEX | VEX_WIG | VEX_66 | VEX_NDS | VEX_0F38 | EVEX), (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             16, 1, { 0x00, 0x00, 0x00 }, 32, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,P_686 | P_AVX,0, NULL },
	{ "vpshufb",    3, { R_ZMM,  R_ZMM,  R_ZMM         }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),  (VEX | VEX_WIG | VEX_66 | VEX_NDS | VEX_0F38 | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z),            32, 1, { 0x00, 0x00, 0x00 }, 64, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,    P_686 | P_AVX,0, NULL },
	{ "vpshufb",    3, { R_ZMM,  R_ZMM,  M_ANY         }, EVX0, (F_MODRM | F_MODRM_REG),               (VEX | VEX_WIG | VEX_66 | VEX_NDS | VEX_0F38 | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD), 32, 1, { 0x00, 0x00, 0x00 }, 64, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
	/* VGATHERDPS */
	/* ----------------------------------------------------------------------------------------------- */
	{ "vgatherdps", 3, { R_XMM,  M_ANY,  R_XMM         }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_DDS | VEX_VSIB),		    (NO_EVEX),											                                  4,  1, { 0x92, 0x00, 0x00 }, 16, 2, NO_MOD,      0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherdps", 3, { R_YMM,  M_ANY,  R_YMM         }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_DDS | VEX_VSIB),		    (NO_EVEX),											                                  8,  1, { 0x92, 0x00, 0x00 }, 32, 2, NO_MOD,      0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherdps", 2, { R_ZMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),         16, 1, { 0x92, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherdps", 2, { R_XMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),         4,  1, { 0x92, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherdps", 2, { R_YMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),         8,  1, { 0x92, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VGATHERDPS */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vgatherdpd", 3, { R_XMM,  M_ANY,  R_XMM         }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_DDS | VEX_VSIB),		      (NO_EVEX),											                         2,  1, { 0x92, 0x00, 0x00 }, 16, 2, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherdpd", 3, { R_YMM,  M_ANY,  R_YMM         }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_DDS | VEX_VSIB),		      (NO_EVEX),											                         4,  1, { 0x92, 0x00, 0x00 }, 32, 2, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherdpd", 2, { R_ZMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB), 8,  1, { 0x92, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherdpd", 2, { R_XMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB), 2,  1, { 0x92, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherdpd", 2, { R_YMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB), 4,  1, { 0x92, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VGATHERQPD */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vgatherqpd", 3, { R_XMM,  M_ANY,  R_XMM         }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_DDS | VEX_VSIB),		      (NO_EVEX),											                          2,  1, { 0x93, 0x00, 0x00 }, 16, 2, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherqpd", 3, { R_YMM,  M_ANY,  R_YMM         }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_DDS | VEX_VSIB),		      (NO_EVEX),											                          4,  1, { 0x93, 0x00, 0x00 }, 32, 2, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherqpd", 2, { R_ZMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),  8,  1, { 0x93, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherqpd", 2, { R_XMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),  2,  1, { 0x93, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherqpd", 2, { R_YMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),  4,  1, { 0x93, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
    /* VGATHERQPS */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vgatherqps", 3, { R_XMM,  M_ANY,  R_XMM         }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_DDS   | VEX_VSIB),		      (NO_EVEX),											                                4,  1, { 0x93, 0x00, 0x00 }, 16, 2, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherqps", 3, { R_YMM,  M_ANY,  R_YMM         }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_DDS   | VEX_VSIB),		      (NO_EVEX),											                                8,  1, { 0x93, 0x00, 0x00 }, 32, 2, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherqps", 2, { R_ZMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           16, 1, { 0x93, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherqps", 2, { R_XMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           4,  1, { 0x93, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vgatherqps", 2, { R_YMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           8,  1, { 0x93, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VPGATHERDD */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vpgatherdd", 3, { R_XMM,  M_ANY,  R_XMM         }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_DDS | VEX_VSIB),		      (NO_EVEX),											                                  4,  1, { 0x90, 0x00, 0x00 }, 16, 2, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vpgatherdd", 3, { R_YMM,  M_ANY,  R_YMM         }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_DDS | VEX_VSIB),		      (NO_EVEX),											                                  8,  1, { 0x90, 0x00, 0x00 }, 32, 2, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vpgatherdd", 2, { R_ZMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           16, 1, { 0x90, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vpgatherdd", 2, { R_XMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           4,  1, { 0x90, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vpgatherdd", 2, { R_YMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           8,  1, { 0x90, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VPGATHERQD */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vpgatherqd", 3, { R_XMM,  M_ANY,  R_XMM         }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 |  VEX_0F38 | VEX_DDS | VEX_VSIB),		      (NO_EVEX),											                                    4,  1, { 0x91, 0x00, 0x00 }, 16, 2, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vpgatherqd", 3, { R_YMM,  M_ANY,  R_YMM         }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 |  VEX_0F38 | VEX_DDS | VEX_VSIB),		      (NO_EVEX),											                                    8,  1, { 0x91, 0x00, 0x00 }, 32, 2, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vpgatherqd", 2, { R_ZMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 |  VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),            16, 1, { 0x91, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vpgatherqd", 2, { R_XMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 |  VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),            4,  1, { 0x91, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vpgatherqd", 2, { R_YMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 |  VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),            8,  1, { 0x91, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
    /* VPGATHERQQ */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vpgatherqq", 3, { R_XMM,  M_ANY,  R_XMM         }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_DDS | VEX_VSIB),		      (NO_EVEX),											                            2,  1, { 0x91, 0x00, 0x00 }, 16, 2, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vpgatherqq", 3, { R_YMM,  M_ANY,  R_YMM         }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_DDS | VEX_VSIB),		      (NO_EVEX),											                            4,  1, { 0x91, 0x00, 0x00 }, 32, 2, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vpgatherqq", 2, { R_ZMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),    8, 1, { 0x91, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vpgatherqq", 2, { R_XMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),    2,  1, { 0x91, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },
	{ "vpgatherqq", 2, { R_YMM,  M_ANY                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_W1 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),    4,  1, { 0x91, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VPSCATTERDD vm32x{ k1 }, xmm1 EVEX.128.66.0F38.W0 A0 / vsib */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vpscatterdd", 2, { M_ANY,  R_XMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           4,  1, { 0xa0, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vpscatterdd", 2, { M_ANY,  R_YMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           8,  1, { 0xa0, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vpscatterdd", 2, { M_ANY,  R_ZMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           16, 1, { 0xa0, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
    /* VPSCATTERDQ vm32x{ k1 }, xmm1 EVEX.128.66.0F38.W0 A0 / vsib */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vpscatterdq", 2, { M_ANY,  R_XMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),           2,  1, { 0xa0, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vpscatterdq", 2, { M_ANY,  R_YMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),           4,  1, { 0xa0, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vpscatterdq", 2, { M_ANY,  R_ZMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),           8, 1, { 0xa0, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
    /* VPSCATTERQD vm32x{ k1 }, xmm1 EVEX.128.66.0F38.W0 A0 / vsib */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vpscatterqd", 2, { M_ANY,  R_XMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                          (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),            4,  1, { 0xa1, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vpscatterqd", 2, { M_ANY,  R_YMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                          (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),            8,  1, { 0xa1, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vpscatterqd", 2, { M_ANY,  R_ZMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                          (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),            16, 1, { 0xa1, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
    /* VPSCATTERQQ vm32x{ k1 }, xmm1 EVEX.128.66.0F38.W0 A0 / vsib */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vpscatterqq", 2, { M_ANY,  R_XMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),           2,  1, { 0xa1, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vpscatterqq", 2, { M_ANY,  R_YMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),           4,  1, { 0xa1, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vpscatterqq", 2, { M_ANY,  R_ZMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),           8, 1, { 0xa1, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
    /*VSCATTERDPS vm32x{ k1 }, xmm1 EVEX.128.66.0F38.W0 A2 / vsib                                      */
    /*VSCATTERDPS vm32y{ k1 }, ymm1 EVEX.256.66.0F38.W0 A2 / vsib                                      */
    /*VSCATTERDPS vm32z{ k1 }, zmm1 EVEX.512.66.0F38.W0 A2 / vsib                                      */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vscatterdps", 2, { M_ANY,  R_XMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           4,  1, { 0xa2, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vscatterdps", 2, { M_ANY,  R_YMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           8,  1, { 0xa2, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vscatterdps", 2, { M_ANY,  R_ZMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           16, 1, { 0xa2, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
    /*VSCATTERDPD vm32x{ k1 }, xmm1 EVEX.128.66.0F38.W1 A2 / vsib                                      */
    /*VSCATTERDPD vm32x{ k1 }, ymm1 EVEX.256.66.0F38.W1 A2 / vsib                                      */
    /*VSCATTERDPD vm32y{ k1 }, zmm1 EVEX.512.66.0F38.W1 A2 / vsib                                      */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vscatterdpd", 2, { M_ANY,  R_XMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),           2,  1, { 0xa2, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vscatterdpd", 2, { M_ANY,  R_YMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),           4,  1, { 0xa2, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vscatterdpd", 2, { M_ANY,  R_ZMM                 }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),           8, 1, { 0xa2, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
    /*VSCATTERQPS vm64x{ k1 }, xmm1 EVEX.128.66.0F38.W0 A3 / vsib                                      */
    /*VSCATTERQPS vm64y{ k1 }, xmm1 EVEX.256.66.0F38.W0 A3 / vsib                                      */
    /*VSCATTERQPS vm64z{ k1 }, ymm1 EVEX.512.66.0F38.W0 A3 / vsib                                      */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vscatterqps", 2, { M_ANY,  R_XMM                }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           4,  1, { 0xa3, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vscatterqps", 2, { M_ANY,  R_YMM                }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           8,  1, { 0xa3, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vscatterqps", 2, { M_ANY,  R_ZMM                }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),           16, 1, { 0xa3, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
    /*VSCATTERQPD vm64x{ k1 }, xmm1 EVEX.128.66.0F38.W1 A3 / vsib                                      */
    /*VSCATTERQPD vm64y{ k1 }, ymm1 EVEX.256.66.0F38.W1 A3 / vsib                                      */
    /*VSCATTERQPD vm64z{ k1 }, zmm1 EVEX.512.66.0F38.W1 A3 / vsib                                      */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vscatterqpd", 2, { M_ANY,  R_XMM                }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),           2,  1, { 0xa3, 0x00, 0x00 }, 16, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vscatterqpd", 2, { M_ANY,  R_YMM                }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),           4,  1, { 0xa3, 0x00, 0x00 }, 32, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
	{ "vscatterqpd", 2, { M_ANY,  R_ZMM                }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_66 | VEX_0F38 | VEX_2OPND | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),           8,  1, { 0xa3, 0x00, 0x00 }, 64, 1, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
    /*VGATHERPF0DPS vm32z {k1}  EVEX.512.66.0F38.W0 C6 /1 /vsib                                      */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vgatherpf0dps", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                           (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),                        16, 1, { 0xc6, 0x01, 0x00 }, 64, 0, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
    /* VGATHERPF0QPS vm64z {k1}  EVEX.512.66.0F38.W0 C7 /1 /vsib                                      */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vgatherpf0qps", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                           (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),                        16, 1, { 0xc7, 0x01, 0x00 }, 64, 0, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
    /* VGATHERPF0DPD vm32y {k1}  EVEX.512.66.0F38.W1 C6 /1 /vsib                                     */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vgatherpf0dpd", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                            (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),                       8, 1,  { 0xc6, 0x01, 0x00 }, 64, 0, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
    
	/* ----------------------------------------------------------------------------------------------- */
    /* VGATHERPF0QPD vm64z {k1   EVEX.512.66.0F38.W1 C7 /1 /vsib                                      */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vgatherpf0qpd", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                           (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),                        8, 1,  { 0xc7, 0x01, 0x00 }, 64, 0, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
      /* VGATHERPF1DPS vm32z {k1}  EVEX.512.66.0F38.W0 C6 /2 /vsib                                      */
      /* ----------------------------------------------------------------------------------------------- */
  { "vgatherpf1dps", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                           (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),                        16,1, { 0xc6, 0x02, 0x00 }, 64, 0, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
      /* VGATHERPF1QPS vm64z {k1}  EVEX.512.66.0F38.W0 C7 /2 /vsib                                     */
      /* ----------------------------------------------------------------------------------------------- */
  { "vgatherpf1qps", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                           (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),                        16,1, { 0xc7, 0x02, 0x00 }, 64, 0, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
      /* VGATHERPF1DPD vm32y {k1}  EVEX.512.66.0F38.W1 C6 /2 /vsib                                      */
      /* ----------------------------------------------------------------------------------------------- */
  { "vgatherpf1dpd", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                            (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),                       8, 1, { 0xc6, 0x02, 0x00 }, 64, 0, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
      /* VGATHERPF1QPD vm64z {k1}  EVEX.512.66.0F38.W1 C7 /2 /vsib                                      */
      /* ----------------------------------------------------------------------------------------------- */
  { "vgatherpf1qpd", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                           (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),                        8, 1, { 0xc7, 0x02, 0x00 }, 64, 0, NO_MOD,       0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
      /*VSCATTERPF0DPS vm32z{ k1 }EVEX.512.66.0F38.W0 C6 / 5 / vsib                                      */
      /* ----------------------------------------------------------------------------------------------- */
  { "vscatterpf0dps", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                           (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),                        16, 1, { 0xc6, 0x05, 0x00 }, 64, 0, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
      /*VSCATTERPF0QPS vm64z{ k1 }EVEX.512.66.0F38.W0 C7 / 5 / vsib                                      */
      /* ----------------------------------------------------------------------------------------------- */
  { "vscatterpf0qps", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                           (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),                        16, 1, { 0xc7, 0x05, 0x00 }, 64, 0, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
      /*VSCATTERPF0DPD vm32y{ k1 }EVEX.512.66.0F38.W1 C6 / 5 / vsib                                      */
      /* ----------------------------------------------------------------------------------------------- */
  { "vscatterpf0dpd", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                            (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),                       8, 1,  { 0xc6, 0x05, 0x00 }, 64, 0, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
      /*VSCATTERPF0QPD vm64z{ k1 }EVEX.512.66.0F38.W1 C7 / 5 / vsib                                      */
      /* ----------------------------------------------------------------------------------------------- */
  { "vscatterpf0qpd", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                           (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),                        8, 1,  { 0xc7, 0x05, 0x00 }, 64, 0, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
      /*VSCATTERPF0DPS vm32z{ k1 }EVEX.512.66.0F38.W0 C6 / 6 / vsib                                      */
      /* ----------------------------------------------------------------------------------------------- */
  { "vscatterpf1dps", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                           (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),                        16,1, { 0xc6, 0x06, 0x00 }, 64, 0, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
      /*VSCATTERPF1QPS vm64z{ k1 }EVEX.512.66.0F38.W0 C7 / 6 / vsib                                      */
      /* ----------------------------------------------------------------------------------------------- */
  { "vscatterpf1qps", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                           (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_K | EVEX_VSIB),                        16,1, { 0xc7, 0x06, 0x00 }, 64, 0, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
      /*VSCATTERPF1DPD vm32y{ k1 }EVEX.512.66.0F38.W1 C6 / 6 / vsib                                      */
      /* ----------------------------------------------------------------------------------------------- */
  { "vscatterpf1dpd", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                            (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),                       8, 1, { 0xc6, 0x06, 0x00 }, 64, 0, NO_MOD,      0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
      /*VSCATTERPF1QPD vm64z{ k1 }EVEX.512.66.0F38.W1 C7 / 6 / vsib                                      */
      /* ----------------------------------------------------------------------------------------------- */
  { "vscatterpf1qpd", 1, { M_ANY, OP_N               }, EVX0, (F_MODRM | OPCODE_EXT),                           (EVEX | VEX_66 | VEX_0F38 | VEX_VSIB | EVEX), (EVEX_ONLY | EVEX_W1 | EVEX_MASK | EVEX_K | EVEX_VSIB),                        8, 1, { 0xc7, 0x06, 0x00 }, 64, 0, NO_MOD,       0, 0               ,0                  , (X32 | X64), RM_DST,  NO_PREFIX, NO_IMM, MEM_OPND_0,    P_686 | P_AVX,0, NULL },


	/* ----------------------------------------------------------------------------------------------- */
	/* VBLENDVPS */
	/* ----------------------------------------------------------------------------------------------- */																																																					         
	{ "vblendvps",  4, { R_XMM,  R_XMM, R_XMM,  R_XMM  }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_66 | VEX_0F3A | VEX_NDS | VEX_4OPND | VEX_W0), (NO_EVEX),												4,  1, { 0x4a, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, NO_MEM,        P_686 | P_AVX,0, NULL },
	{ "vblendvps",  4, { R_XMM,  R_XMM, M_ANY,  R_XMM  }, AVX0, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_66 | VEX_0F3A | VEX_NDS | VEX_4OPND | VEX_W0), (NO_EVEX),												4,  1, { 0x4a, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, MEM_OPND_2,    P_686 | P_AVX,0, NULL },
	{ "vblendvps",  4, { R_YMM,  R_YMM, R_YMM,  R_YMM  }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_66 | VEX_0F3A | VEX_NDS | VEX_4OPND | VEX_W0), (NO_EVEX),												8,  1, { 0x4a, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, NO_MEM,        P_686 | P_AVX,0, NULL },
	{ "vblendvps",  4, { R_YMM,  R_YMM, M_ANY,  R_YMM  }, AVX1, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_66 | VEX_0F3A | VEX_NDS | VEX_4OPND | VEX_W0), (NO_EVEX),												8,  1, { 0x4a, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, MEM_OPND_2,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
	/* VBLENDVPD */
	/* ----------------------------------------------------------------------------------------------- */																																																					         
	{ "vblendvpd",  4, { R_XMM,  R_XMM, R_XMM,  R_XMM  }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_66 | VEX_0F3A | VEX_NDS | VEX_4OPND | VEX_W0), (NO_EVEX),												2,  1, { 0x4b, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, NO_MEM,        P_686 | P_AVX,0, NULL },
	{ "vblendvpd",  4, { R_XMM,  R_XMM, M_ANY,  R_XMM  }, AVX0, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_66 | VEX_0F3A | VEX_NDS | VEX_4OPND | VEX_W0), (NO_EVEX),												2,  1, { 0x4b, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, MEM_OPND_2,    P_686 | P_AVX,0, NULL },
	{ "vblendvpd",  4, { R_YMM,  R_YMM, R_YMM,  R_YMM  }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_66 | VEX_0F3A | VEX_NDS | VEX_4OPND | VEX_W0), (NO_EVEX),												4,  1, { 0x4b, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, NO_MEM,        P_686 | P_AVX,0, NULL },
	{ "vblendvpd",  4, { R_YMM,  R_YMM, M_ANY,  R_YMM  }, AVX1, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_66 | VEX_0F3A | VEX_NDS | VEX_4OPND | VEX_W0), (NO_EVEX),												4,  1, { 0x4b, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, MEM_OPND_2,    P_686 | P_AVX,0, NULL },
    /* ----------------------------------------------------------------------------------------------- */
    /* VBLENDPS */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vblendps",   4, { R_XMM,  R_XMM, R_XMM, IMM8    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_66 | VEX_WIG | VEX_0F3A | VEX_NDS),	         (NO_EVEX),												  4,  1, { 0x0c, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, NO_MEM,        P_686 | P_AVX,0, NULL },
	{ "vblendps",   4, { R_XMM,  R_XMM, M_ANY, IMM8    }, AVX0, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_66 | VEX_WIG | VEX_0F3A | VEX_NDS),          (NO_EVEX),												  4,  1, { 0x0c, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, MEM_OPND_2,    P_686 | P_AVX,0, NULL },
	{ "vblendps",   4, { R_YMM,  R_YMM, R_YMM, IMM8    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_66 | VEX_WIG | VEX_0F3A | VEX_NDS),	         (NO_EVEX),												  8,  1, { 0x0c, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, NO_MEM,        P_686 | P_AVX,0, NULL },
	{ "vblendps",   4, { R_YMM,  R_YMM, M_ANY, IMM8    }, AVX1, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_66 | VEX_WIG | VEX_0F3A | VEX_NDS),	         (NO_EVEX),												  8,  1, { 0x0c, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, MEM_OPND_2,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
    /* VBLENDPD */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vblendpd",   4, { R_XMM,  R_XMM, R_XMM, IMM8    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_66 | VEX_WIG | VEX_0F3A | VEX_NDS),	         (NO_EVEX),												  2,  1, { 0x0d, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, NO_MEM,        P_686 | P_AVX,0, NULL },
	{ "vblendpd",   4, { R_XMM,  R_XMM, M_ANY, IMM8    }, AVX0, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_66 | VEX_WIG | VEX_0F3A | VEX_NDS),          (NO_EVEX),												  2,  1, { 0x0d, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, MEM_OPND_2,    P_686 | P_AVX,0, NULL },
	{ "vblendpd",   4, { R_YMM,  R_YMM, R_YMM, IMM8    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_66 | VEX_WIG | VEX_0F3A | VEX_NDS),	         (NO_EVEX),												  4,  1, { 0x0d, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, NO_MEM,        P_686 | P_AVX,0, NULL },
	{ "vblendpd",   4, { R_YMM,  R_YMM, M_ANY, IMM8    }, AVX1, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_66 | VEX_WIG | VEX_0F3A | VEX_NDS),	         (NO_EVEX),												  3,  1, { 0x0d, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, MEM_OPND_2,    P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */																																																					         
	/* VMPSADBW */																																																																											         
	/* ----------------------------------------------------------------------------------------------- */																																																					         
	{ "vmpsadbw",   4, { R_XMM,  R_XMM, R_XMM, IMM8    }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_66 | VEX_WIG | VEX_0F3A | VEX_NDS),	         (NO_EVEX),													4,  1, { 0x42, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, NO_MEM,        P_686 | P_AVX,0, NULL },
	{ "vmpsadbw",   4, { R_XMM,  R_XMM, M_ANY, IMM8    }, AVX0, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_66 | VEX_WIG | VEX_0F3A | VEX_NDS),            (NO_EVEX),													4,  1, { 0x42, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, MEM_OPND_2,    P_686 | P_AVX,0, NULL },
	{ "vmpsadbw",   4, { R_YMM,  R_YMM, R_YMM, IMM8    }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_66 | VEX_WIG | VEX_0F3A | VEX_NDS),	         (NO_EVEX),													8,  1, { 0x42, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, NO_MEM,        P_686 | P_AVX,0, NULL },
	{ "vmpsadbw",   4, { R_YMM,  R_YMM, M_ANY, IMM8    }, AVX1, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_66 | VEX_WIG | VEX_0F3A | VEX_NDS),	         (NO_EVEX),													8,  1, { 0x42, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_3, MEM_OPND_2,    P_686 | P_AVX,0, NULL },
		/* Implicit NDS forms */																																																																							         
		{ "vmpsadbw",   3, { R_XMM,  R_XMM,  IMM8      }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_66 | VEX_WIG | VEX_0F3A | VEX_DUP_NDS),	     (NO_EVEX),													4,  1, { 0x42, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, NO_MEM,        P_686 | P_AVX,0, NULL },
		{ "vmpsadbw",   3, { R_YMM,  R_YMM,  IMM8      }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_66 | VEX_WIG | VEX_0F3A | VEX_DUP_NDS),	     (NO_EVEX),													8,  1, { 0x42, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, NO_MEM,        P_686 | P_AVX,0, NULL },
																																																																															         
	/* ----------------------------------------------------------------------------------------------- */																																																					         
	/* VPMOVZXBQ */																																																																											         
	/* ----------------------------------------------------------------------------------------------- */																																																					         
	{ "vpmovzxbq",   2, { R_XMM,  R_XMM,                  }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_66 | VEX_WIG | VEX_2OPND | VEX_0F38 | EVEX), 	 (EVEX_MASK | EVEX_Z),									  2, 1, { 0x32, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vpmovzxbq",   2, { R_XMM,  M_ANY,                  }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_WIG | VEX_2OPND | VEX_0F38 | EVEX),	 (EVEX_MASK | EVEX_Z),									    2, 1, { 0x32, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },
	{ "vpmovzxbq",   2, { R_YMM,  R_XMM,                  }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_66 | VEX_WIG | VEX_2OPND | VEX_0F38 | EVEX), 	 (EVEX_MASK | EVEX_Z),									  4, 1, { 0x32, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vpmovzxbq",   2, { R_YMM,  M_ANY,                  }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_WIG | VEX_2OPND | VEX_0F38 | EVEX),	 (EVEX_MASK | EVEX_Z),									    4, 1, { 0x32, 0x00, 0x00 }, 32, 1, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },
	{ "vpmovzxbq",   2, { R_ZMM,  R_XMM,                  }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_66 | VEX_WIG | VEX_2OPND | VEX_0F38 | EVEX), 	 (EVEX_ONLY | EVEX_MASK | EVEX_Z),				8, 1, { 0x32, 0x00, 0x00 }, 64, 1, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vpmovzxbq",   2, { R_ZMM,  M_ANY,                  }, EVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_66 | VEX_WIG | VEX_2OPND | VEX_0F38 | EVEX),	 (EVEX_ONLY | EVEX_MASK | EVEX_Z),					8, 1, { 0x32, 0x00, 0x00 }, 64, 1, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
	/* VBROADCASTSD */
	/* ----------------------------------------------------------------------------------------------- */
	{ "vbroadcastsd",   2, { R_YMM,  M_ANY,               }, AVX1, (F_MODRM | F_MODRM_REG),                        (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | VEX_W0 | EVEX), (EVEX_MASK | EVEX_Z    | EVEX_W1),							8,  1, { 0x19, 0x00, 0x00 }, 32, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },
	{ "vbroadcastsd",   2, { R_YMM,  R_XMM,               }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | VEX_W0 | EVEX), (EVEX_MASK | EVEX_Z    | EVEX_W1),							8,  1, { 0x19, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vbroadcastsd",   2, { R_ZMM,  R_XMM,               }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1),			8,  1, { 0x19, 0x00, 0x00 }, 64, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vbroadcastsd",   2, { R_ZMM,  M_ANY,               }, EVX0, (F_MODRM | F_MODRM_REG),                        (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1),			8,  1, { 0x19, 0x00, 0x00 }, 64, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VBROADCASTSS */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vbroadcastss",   2, { R_YMM,  M_ANY,               }, AVX1, (F_MODRM | F_MODRM_REG),                        (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | VEX_W0 | EVEX), (EVEX_MASK | EVEX_Z    | EVEX_W1),							4,  1, { 0x18, 0x00, 0x00 }, 32, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 ), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },
	{ "vbroadcastss",   2, { R_YMM,  R_XMM,               }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | VEX_W0 | EVEX), (EVEX_MASK | EVEX_Z    | EVEX_W1),							4,  1, { 0x18, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 ), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vbroadcastss",   2, { R_ZMM,  R_XMM,               }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1),			4,  1, { 0x18, 0x00, 0x00 }, 64, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 ), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vbroadcastss",   2, { R_ZMM,  M_ANY,               }, EVX0, (F_MODRM | F_MODRM_REG),                        (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1),			4,  1, { 0x18, 0x00, 0x00 }, 64, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 ), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VBROADCASF32x2 */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vbroadcastf32x2",   2, { R_YMM,  M_ANY,            }, EVX0, (F_MODRM | F_MODRM_REG),                        (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W0),							8,  1, { 0x19, 0x00, 0x00 }, 32, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },
	{ "vbroadcastf32x2",   2, { R_YMM,  R_XMM,            }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W0),							8,  1, { 0x19, 0x00, 0x00 }, 32, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vbroadcastf32x2",   2, { R_ZMM,  R_XMM,            }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W0),							8,  1, { 0x19, 0x00, 0x00 }, 64, 1, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vbroadcastf32x2",   2, { R_ZMM,  M_ANY,            }, EVX0, (F_MODRM | F_MODRM_REG),                        (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W0),							8,  1, { 0x19, 0x00, 0x00 }, 64, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VBROADCASF32x4 */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vbroadcastf32x4",   2, { R_YMM,  M_ANY,            }, EVX0, (F_MODRM | F_MODRM_REG),                        (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W0),							4,  1, { 0x1A, 0x00, 0x00 }, 32, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },
	{ "vbroadcastf32x4",   2, { R_ZMM,  M_ANY,            }, EVX0, (F_MODRM | F_MODRM_REG),                        (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W0),							4,  1, { 0x1A, 0x00, 0x00 }, 64, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VBROADCASF64x2 */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vbroadcastf64x2",   2, { R_YMM,  M_ANY,            }, EVX0, (F_MODRM | F_MODRM_REG),                        (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1),							8,  1, { 0x1A, 0x00, 0x00 }, 32, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },
	{ "vbroadcastf64x2",   2, { R_ZMM,  M_ANY,            }, EVX0, (F_MODRM | F_MODRM_REG),                        (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1),							8,  1, { 0x1A, 0x00, 0x00 }, 64, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VBROADCASF32x8 */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vbroadcastf32x8",   2, { R_ZMM,  M_ANY,            }, EVX0, (F_MODRM | F_MODRM_REG),                        (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W0),							4,  1, { 0x1B, 0x00, 0x00 }, 64, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VBROADCASF64x4 */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vbroadcastf64x4",   2, { R_ZMM,  M_ANY,            }, EVX0, (F_MODRM | F_MODRM_REG),                        (VEX | VEX_66 | VEX_2OPND | VEX_0F38 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1),							8,  1, { 0x1B, 0x00, 0x00 }, 64, 1, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },

	/* ----------------------------------------------------------------------------------------------- */
	/* VBLENDMPD */
	/* ----------------------------------------------------------------------------------------------- */
	{ "vblendmpd",      3, { R_XMM,  R_XMM,  R_XMM        }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1),					      2,  1, { 0x65, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vblendmpd",      3, { R_YMM,  R_YMM,  R_YMM        }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1),					      4,  1, { 0x65, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vblendmpd",      3, { R_ZMM,  R_ZMM,  R_ZMM        }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1),					      8,  1, { 0x65, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vblendmpd",      3, { R_XMM,  R_XMM,  M_ANY        }, EVX0, (F_MODRM | F_MODRM_REG),						             (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1 | EVEX_BRD),		2,  1, { 0x65, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
	{ "vblendmpd",      3, { R_YMM,  R_YMM,  M_ANY        }, EVX0, (F_MODRM | F_MODRM_REG),						             (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1 | EVEX_BRD),		4,  1, { 0x65, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
	{ "vblendmpd",      3, { R_ZMM,  R_ZMM,  M_ANY        }, EVX0, (F_MODRM | F_MODRM_REG),						             (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1 | EVEX_BRD),		8,  1, { 0x65, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (      X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VBLENDMPS */
    /* ----------------------------------------------------------------------------------------------- */
	{ "vblendmps",      3, { R_XMM,  R_XMM,  R_XMM        }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W0),					      4,  1, { 0x65, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vblendmps",      3, { R_YMM,  R_YMM,  R_YMM        }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W0),					      8,  1, { 0x65, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vblendmps",      3, { R_ZMM,  R_ZMM,  R_ZMM        }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W0),					      16, 1, { 0x65, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
	{ "vblendmps",      3, { R_XMM,  R_XMM,  M_ANY        }, EVX0, (F_MODRM | F_MODRM_REG),						             (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W0 | EVEX_BRD),		4,  1, { 0x65, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
	{ "vblendmps",      3, { R_YMM,  R_YMM,  M_ANY        }, EVX0, (F_MODRM | F_MODRM_REG),						             (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W0 | EVEX_BRD),		8,  1, { 0x65, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
	{ "vblendmps",      3, { R_ZMM,  R_ZMM,  M_ANY        }, EVX0, (F_MODRM | F_MODRM_REG),						             (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_W0 | EVEX), (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W0 | EVEX_BRD),	  16, 1, { 0x65, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },

    /* ----------------------------------------------------------------------------------------------- */
    /* VAESDEC xmm1, xmm2, xmm3 / m128 VEX.128.66.0F38.WIG DE / r */
    /* ----------------------------------------------------------------------------------------------- */
  { "vaesdec",      3, { R_XMM,  R_XMM,  R_XMM        }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_WIG), (NO_EVEX),   2,  1, { 0xde, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
  { "vaesdec",      3, { R_XMM,  R_XMM,  M_ANY        }, AVX0, (F_MODRM | F_MODRM_REG),						            (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_WIG), (NO_EVEX),		2,  1, { 0xde, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
    
	/* ----------------------------------------------------------------------------------------------- */
    /* VAESDECLAST xmm1, xmm2, xmm3 / m128 VEX.128.66.0F38.WIG DF / r */
    /* ----------------------------------------------------------------------------------------------- */
    { "vaesdeclast",      3, { R_XMM,  R_XMM,  R_XMM        }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),       (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_WIG), (NO_EVEX),   2,  1, { 0xdf, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
    { "vaesdeclast",      3, { R_XMM,  R_XMM,  M_ANY        }, AVX0, (F_MODRM | F_MODRM_REG),						        (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_WIG), (NO_EVEX),		2,  1, { 0xdf, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
    
	/* ----------------------------------------------------------------------------------------------- */
    /* VAESENC xmm1, xmm2, xmm3 / m128 VEX.128.66.0F38.WIG DC / r */
    /* ----------------------------------------------------------------------------------------------- */
    { "vaesenc",      3, { R_XMM,  R_XMM,  R_XMM        }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_WIG), (NO_EVEX),   2,  1, { 0xdc, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
    { "vaesenc",      3, { R_XMM,  R_XMM,  M_ANY        }, AVX0, (F_MODRM | F_MODRM_REG),						            (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_WIG), (NO_EVEX),		2,  1, { 0xdc, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
    
	/* ----------------------------------------------------------------------------------------------- */
    /* VAESENCLAST xmm1, xmm2, xmm3 / m128 VEX.128.66.0F38.WIG DD / r */
    /* ----------------------------------------------------------------------------------------------- */
    { "vaesdeclast",      3, { R_XMM,  R_XMM,  R_XMM        }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),       (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_WIG), (NO_EVEX),   2,  1, { 0xdd, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
    { "vaesdeclast",      3, { R_XMM,  R_XMM,  M_ANY        }, AVX0, (F_MODRM | F_MODRM_REG),						        (VEX | VEX_66 | VEX_NDS | VEX_0F38 | VEX_WIG), (NO_EVEX),		2,  1, { 0xdd, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
    
	/* ----------------------------------------------------------------------------------------------- */
    /* VAESIMC xmm1, xmm2 / m128 VEX.128.66.0F38.WIG DB / r */
    /* ----------------------------------------------------------------------------------------------- */
    { "vaesimc",      2, { R_XMM,  R_XMM        }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_66 | VEX_0F38 | VEX_WIG), (NO_EVEX),   2,  1, { 0xdb, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
    { "vaesimc",      2, { R_XMM,  M_ANY        }, AVX0, (F_MODRM | F_MODRM_REG),						             (VEX | VEX_66 | VEX_0F38 | VEX_WIG), (NO_EVEX),		2,  1, { 0xdb, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_1,         P_686 | P_AVX,0, NULL },
    
	/* ----------------------------------------------------------------------------------------------- */
    /* VAESKEYGENASSIST xmm1, xmm2 / m128, imm8 VEX.128.66.0F3A.WIG DF / r ib */
    /* ----------------------------------------------------------------------------------------------- */
    { "vaeskeygenassist",    3, { R_XMM,  R_XMM,  IMM8          }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM) | IMM8_ONLY,  (VEX | VEX_WIG | VEX_0F3A | VEX_66 | VEX_2OPND), (NO_EVEX),             4,  1, { 0xdf, 0x00, 0x00 }, 16, 1, MOD_REG_REG, 0, 0,  0, (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, NO_MEM,    P_686 | P_AVX,0, NULL },
    { "vaeskeygenassist",    3, { R_XMM,  M_ANY,  IMM8          }, AVX0, (F_MODRM | F_MODRM_REG) | IMM8_ONLY,               (VEX | VEX_WIG | VEX_0F3A | VEX_66 | VEX_2OPND), (NO_EVEX),             4,  1, { 0xdf, 0x00, 0x00 }, 16, 1, MOD_REG_MEM, 0, 0,  0, (X32 | X64), REG_DST, NO_PREFIX, IMM_OPND_2, MEM_OPND_1,P_686 | P_AVX,0, NULL },
    
	/* VEX-ENCODED GPR INSTRUCTIONS */
    //ANDN r32a, r32b, r / m32 VEX.LZ.0F38.W0 F2 / r2 
    //ANDN r64a, r64b, r / m64 VEX.LZ. 0F38.W1 F2 / r
    { "andn",      3, { R32,  R32,  R32        }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_W0 | VEX_NDS | VEX_0F38), (NO_EVEX),  2,  1, { 0xf2, 0x00, 0x00 }, 4, 1, MOD_REG_REG, 0, 0,  0, (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
    { "andn",      3, { R32,  R32,  M_ANY      }, AVX0, (F_MODRM | F_MODRM_REG),						(VEX | VEX_W0 | VEX_NDS | VEX_0F38), (NO_EVEX),	 2,  1, { 0xf2, 0x00, 0x00 }, 4, 1, MOD_REG_MEM, 0, 0,  0, (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
    { "andn",      3, { R64,  R64,  R64        }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),           (VEX | VEX_W1 | VEX_NDS | VEX_0F38), (NO_EVEX),  2,  1, { 0xf2, 0x00, 0x00 }, 8, 1, MOD_REG_REG, 0, 0,  0, (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
    { "andn",      3, { R64,  R64,  M_ANY      }, AVX0, (F_MODRM | F_MODRM_REG),						(VEX | VEX_W1 | VEX_NDS | VEX_0F38), (NO_EVEX),	 2,  1, { 0xf2, 0x00, 0x00 }, 8, 1, MOD_REG_MEM, 0, 0,  0, (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
    
    //BEXTR r32a, r / m32, r32b VEX.LZ.0F38.W0 F7 / r
    //BEXTR r64a, r / m64, r64b VEX.LZ.0F38.W1 F7 / r
    { "bextr",     3, { R32,  R32,  R32        }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),          (VEX | VEX_W0 | VEX_NDS | VEX_0F38 | VEX_3RD_OP), (NO_EVEX), 2,  1, { 0xf7, 0x00, 0x00 }, 4, 1, MOD_REG_REG, 0, 0,  0, (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
    { "bextr",     3, { R32,  R32,  M_ANY      }, AVX0, (F_MODRM | F_MODRM_REG),					   (VEX | VEX_W0 | VEX_NDS | VEX_0F38 | VEX_3RD_OP), (NO_EVEX), 2,  1, { 0xf7, 0x00, 0x00 }, 4, 1, MOD_REG_MEM, 0, 0,  0, (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
    { "bextr",     3, { R64,  R64,  R64        }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),          (VEX | VEX_W1 | VEX_NDS | VEX_0F38 | VEX_3RD_OP), (NO_EVEX), 2,  1, { 0xf7, 0x00, 0x00 }, 8, 1, MOD_REG_REG, 0, 0,  0, (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
    { "bextr",     3, { R64,  R64,  M_ANY      }, AVX0, (F_MODRM | F_MODRM_REG),					   (VEX | VEX_W1 | VEX_NDS | VEX_0F38 | VEX_3RD_OP), (NO_EVEX), 2,  1, { 0xf7, 0x00, 0x00 }, 8, 1, MOD_REG_MEM, 0, 0,  0, (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },


  //VANDPD xmm1, xmm2, xmm3/m128 VEX.128.66.0F 54 /r                     
  //VANDPD ymm1, ymm2, ymm3/m256 VEX.256.66.0F 54 /r                     
  //VANDPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst EVEX.128.66.0F.W1 54 /r 
  //VANDPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst EVEX.256.66.0F.W1 54 /r 
  //VANDPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst EVEX.512.66.0F.W1 54 /r 
  { "vandpd",      3, { R_XMM,  R_XMM,  R_XMM        }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),            (VEX | VEX_66 | VEX_NDS | VEX_0F | EVEX),    (EVEX_MASK | EVEX_Z | EVEX_W1),					                2,  1, { 0x54, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
  { "vandpd",      3, { R_XMM,  R_XMM,  M_ANY        }, AVX0, (F_MODRM | F_MODRM_REG),						             (VEX | VEX_66 | VEX_NDS | VEX_0F | EVEX),    (EVEX_MASK | EVEX_Z | EVEX_W1 | EVEX_BRD),		          2,  1, { 0x54, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
  { "vandpd",      3, { R_YMM,  R_YMM,  R_YMM        }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),            (VEX | VEX_66 | VEX_NDS | VEX_0F | EVEX),    (EVEX_MASK | EVEX_Z | EVEX_W1),					                4,  1, { 0x54, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
  { "vandpd",      3, { R_YMM,  R_YMM,  M_ANY        }, AVX1, (F_MODRM | F_MODRM_REG),						             (VEX | VEX_66 | VEX_NDS | VEX_0F | EVEX),    (EVEX_MASK | EVEX_Z | EVEX_W1 | EVEX_BRD),		          4,  1, { 0x54, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
  { "vandpd",      3, { R_ZMM,  R_ZMM,  R_ZMM        }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),            (EVEX | VEX_66 | VEX_NDS | VEX_0F),          (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1),					    8,  1, { 0x54, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
  { "vandpd",      3, { R_ZMM,  R_ZMM,  M_ANY        }, EVX0, (F_MODRM | F_MODRM_REG),						             (EVEX | VEX_66 | VEX_NDS | VEX_0F),          (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1 | EVEX_BRD),	8,  1, { 0x54, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },

    //VANDPS xmm1, xmm2, xmm3 / m128  VEX.128.0F 54 / r
    //VANDPS ymm1, ymm2, ymm3 / m256 VEX.256.0F 54 / r
    //VANDPS xmm1{ k1 }{z}, xmm2, xmm3 / m128 / m32bcst EVEX.128.0F.W0 54 / r
    //VANDPS ymm1{ k1 }{z}, ymm2, ymm3 / m256 / m32bcst EVEX.256.0F.W0 54 / r
    //VANDPS zmm1{ k1 }{z}, zmm2, zmm3 / m512 / m32bcst EVEX.512.0F.W0 54 / r
  { "vandps",  3, { R_XMM,  R_XMM, R_XMM             }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z),                        4,  1, { 0x54, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vandps",  3, { R_XMM,  R_XMM, M_ANY             }, AVX0, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             4,  1, { 0x54, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vandps",  3, { R_YMM,  R_YMM, R_YMM             }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (VEX | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z),                        8,  1, { 0x54, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vandps",  3, { R_YMM,  R_YMM, M_ANY             }, AVX1, (F_MODRM | F_MODRM_REG),                           (VEX | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),             8,  1, { 0x54, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vandps",  3, { R_ZMM,  R_ZMM, R_ZMM             }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),              (EVEX | VEX_0F | VEX_NDS),                  (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z),            16, 1, { 0x54, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vandps",  3, { R_ZMM,  R_ZMM, M_ANY             }, EVX0, (F_MODRM | F_MODRM_REG),                           (EVEX | VEX_0F | VEX_NDS),                  (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD), 16, 1, { 0x54, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
    
    //VANDNPD xmm1, xmm2,xmm3 / m128 VEX.128.66.0F 55 / r
    //VANDNPD ymm1, ymm2,ymm3 / m256 VEX.256.66.0F 55 / r
    //VANDNPD xmm1{ k1 }{z}, xmm2,xmm3 / m128 / m64bcst EVEX.128.66.0F.W1 55 / r
    //VANDNPD ymm1{ k1 }{z}, ymm2,ymm3 / m256 / m64bcst EVEX.256.66.0F.W1 55 / r
    //VANDNPD zmm1{ k1 }{z}, zmm2,zmm3 / m512 / m64bcst EVEX.512.66.0F.W1 55 / r
  { "vandnpd",      3, { R_XMM,  R_XMM,  R_XMM        }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),            (VEX | VEX_66 | VEX_NDS | VEX_0F | EVEX),    (EVEX_MASK | EVEX_Z | EVEX_W1),					                2,  1, { 0x55, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
  { "vandnpd",      3, { R_XMM,  R_XMM,  M_ANY        }, AVX0, (F_MODRM | F_MODRM_REG),						              (VEX | VEX_66 | VEX_NDS | VEX_0F | EVEX),    (EVEX_MASK | EVEX_Z | EVEX_W1 | EVEX_BRD),		            2,  1, { 0x55, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
  { "vandnpd",      3, { R_YMM,  R_YMM,  R_YMM        }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),            (VEX | VEX_66 | VEX_NDS | VEX_0F | EVEX),    (EVEX_MASK | EVEX_Z | EVEX_W1),					                4,  1, { 0x55, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
  { "vandnpd",      3, { R_YMM,  R_YMM,  M_ANY        }, AVX1, (F_MODRM | F_MODRM_REG),						              (VEX | VEX_66 | VEX_NDS | VEX_0F | EVEX),    (EVEX_MASK | EVEX_Z | EVEX_W1 | EVEX_BRD),		            4,  1, { 0x55, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
  { "vandnpd",      3, { R_ZMM,  R_ZMM,  R_ZMM        }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),            (EVEX | VEX_66 | VEX_NDS | VEX_0F),          (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1),					    8,  1, { 0x55, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, NO_MEM,             P_686 | P_AVX,0, NULL },
  { "vandnpd",      3, { R_ZMM,  R_ZMM,  M_ANY        }, EVX0, (F_MODRM | F_MODRM_REG),						              (EVEX | VEX_66 | VEX_NDS | VEX_0F),          (EVEX_ONLY | EVEX_MASK | EVEX_Z | EVEX_W1 | EVEX_BRD),	  8,  1, { 0x55, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM, MEM_OPND_2,         P_686 | P_AVX,0, NULL },
    
    //VANDNPS xmm1, xmm2,xmm3 / m128 VEX.128.0F 55 / r
    //VANDNPS ymm1, ymm2,ymm3 / m256 VEX.256.0F 55 / r
    //VANDNPS xmm1{ k1 }{z},xmm2, xmm3 / m128 / m32bcst EVEX.128.0F.W0 55 / r
    //VANDNPS ymm1{ k1 }{z},ymm2, ymm3 / m256 / m32bcst EVEX.256.0F.W0 55 / r
    //VANDNPS zmm1{ k1 }{z},zmm2, zmm3 / m512 / m32bcst EVEX.512.0F.W0 55 / r
  { "vandnps",      3, { R_XMM,  R_XMM, R_XMM         }, AVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),            (VEX | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z),                           4,  1, { 0x55, 0x00, 0x00 }, 16, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vandnps",      3, { R_XMM,  R_XMM, M_ANY         }, AVX0, (F_MODRM | F_MODRM_REG),                         (VEX | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),                4,  1, { 0x55, 0x00, 0x00 }, 16, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vandnps",      3, { R_YMM,  R_YMM, R_YMM         }, AVX1, (F_MODRM | F_MODRM_REG | F_MODRM_RM),            (VEX | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z),                           8,  1, { 0x55, 0x00, 0x00 }, 32, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vandnps",      3, { R_YMM,  R_YMM, M_ANY         }, AVX1, (F_MODRM | F_MODRM_REG),                         (VEX | VEX_0F | VEX_NDS | EVEX),            (EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),                8,  1, { 0x55, 0x00, 0x00 }, 32, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },
  { "vandnps",      3, { R_ZMM,  R_ZMM, R_ZMM         }, EVX0, (F_MODRM | F_MODRM_REG | F_MODRM_RM),            (EVEX | VEX_0F | VEX_NDS),                  (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z),               16, 1, { 0x55, 0x00, 0x00 }, 64, 2, MOD_REG_REG, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     NO_MEM,     P_686 | P_AVX, 0, NULL },
  { "vandnps",      3, { R_ZMM,  R_ZMM, M_ANY         }, EVX0, (F_MODRM | F_MODRM_REG),                         (EVEX | VEX_0F | VEX_NDS),                  (EVEX_ONLY | EVEX_W0 | EVEX_MASK | EVEX_Z | EVEX_BRD),    16, 1, { 0x55, 0x00, 0x00 }, 64, 2, MOD_REG_MEM, 0, 0               ,0                  , (X32 | X64), REG_DST, NO_PREFIX, NO_IMM,     MEM_OPND_2, P_686 | P_AVX, 0, NULL },

};
