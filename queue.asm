; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.40310.41 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	QEnqueue
; Function compile flags: /Ogtpy
; File d:\hjwasm\hjwasm2.13.1s\hjwasm2.13.1s\queue.c
_TEXT	SEGMENT
q$ = 8
item$ = 16
QEnqueue PROC NEAR

; 49   :     if( q->head == NULL ) {

	cmp	QWORD PTR [rcx], 0
	jne	SHORT $LN2@QEnqueue

; 50   :         q->head = q->tail = item;

	mov	QWORD PTR [rcx], rdx

; 54   :         q->tail = item;

	mov	QWORD PTR [rcx+8], rdx

; 55   :     }
; 56   :     *(void**)item = NULL;

	mov	QWORD PTR [rdx], 0

; 57   : }

	ret	0
$LN2@QEnqueue:

; 51   :     } else {
; 52   : /**/    myassert( q->tail != NULL );
; 53   :         *(void **)q->tail = item;

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rdx

; 54   :         q->tail = item;

	mov	QWORD PTR [rcx+8], rdx

; 55   :     }
; 56   :     *(void**)item = NULL;

	mov	QWORD PTR [rdx], 0

; 57   : }

	ret	0
QEnqueue ENDP
_TEXT	ENDS
PUBLIC	QAddItem
EXTRN	LclAlloc:NEAR
xdata	SEGMENT
$unwind$QAddItem DD 010401H
	DD	04204H
xdata	ENDS
pdata	SEGMENT
$pdata$QAddItem DD @imagerel($LN7#)
	DD	@imagerel($LN7#+4)
	DD	@imagerel($unwind$QAddItem#)
pdata	ENDS
xdata	SEGMENT
$chain$1$QAddItem DD 040a21H
	DD	09740aH
	DD	083405H
	DD	@imagerel($LN7#)
	DD	@imagerel($LN7#+4)
	DD	@imagerel($unwind$QAddItem#)
xdata	ENDS
pdata	SEGMENT
$pdata$1$QAddItem DD @imagerel($LN7#+4)
	DD	@imagerel($LN7#+48)
	DD	@imagerel($chain$1$QAddItem#)
pdata	ENDS
xdata	SEGMENT
$chain$2$QAddItem DD 020021H
	DD	097400H
	DD	@imagerel($LN7#)
	DD	@imagerel($LN7#+4)
	DD	@imagerel($unwind$QAddItem#)
xdata	ENDS
pdata	SEGMENT
$pdata$2$QAddItem DD @imagerel($LN7#+48)
	DD	@imagerel($LN7#+100)
	DD	@imagerel($chain$2$QAddItem#)
; Function compile flags: /Ogtpy
pdata	ENDS
_TEXT	SEGMENT
q$ = 48
data$ = 56
QAddItem PROC NEAR

; 63   : {

$LN7:
	sub	rsp, 40					; 00000028H
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+72], rdi
	mov	rdi, rcx

; 64   :     struct qnode    *node;
; 65   : 
; 66   :     node = LclAlloc( sizeof( struct qnode ) );

	mov	ecx, 16
	mov	rbx, rdx
	call	LclAlloc
	mov	r11, rax

; 67   :     node->elmt = data;

	mov	QWORD PTR [rax+8], rbx

; 68   :     QEnqueue( q, node );

	cmp	QWORD PTR [rdi], 0
	mov	rbx, QWORD PTR [rsp+64]
	jne	SHORT $LN4@QAddItem
	mov	QWORD PTR [rdi+8], rax
	mov	QWORD PTR [rdi], rax
	mov	QWORD PTR [rax], 0
	mov	rdi, QWORD PTR [rsp+72]

; 69   : }

	add	rsp, 40					; 00000028H
	ret	0

; 68   :     QEnqueue( q, node );

$LN4@QAddItem:
	mov	rax, QWORD PTR [rdi+8]
	mov	QWORD PTR [rax], r11
	mov	QWORD PTR [rdi+8], r11
	mov	rdi, QWORD PTR [rsp+72]
	mov	QWORD PTR [r11], 0

; 69   : }

	add	rsp, 40					; 00000028H
	ret	0
QAddItem ENDP
_TEXT	ENDS
END
